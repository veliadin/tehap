{"version":3,"sources":["components/Input.js","components/ButtonWithProgress.js","shared/ApiProgress.js","api/apiCalls.js","redux/authActions.js","redux/Constants.js","pages/UserLoginPage.js","pages/UserSignupPage.js","components/Footer.js","components/ProfileImageWithDefault.js","components/AutoUploadImage.js","components/ActivitySubmit.js","components/Modal.js","components/ActivityView.js","components/Spinner.js","components/Activities.js","pages/HomePage.js","components/ProfileCard.js","pages/UserPage.js","components/TopBar.js","App.js","serviceWorker.js","118n.js","redux/authReducer.js","redux/configureStore.js","index.js","assets/profile.png","assets/icon-light.png"],"names":["Input","props","label","error","name","onChange","type","defaultValue","className","undefined","ButtonWithProgress","onClick","pendingApiCall","disabled","text","useApiProgress","apiMethod","apiPath","strictPath","useState","setPendingApiCall","useEffect","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","axios","interceptors","request","use","response","config","eject","getUser","username","get","updateUser","body","ret","put","console","log","setAuthorizationHeader","password","isLoggedIn","authorizationHeaderValue","btoa","defaults","headers","createActivity","post","getActivities","page","path","getOldActivities","id","getNewActivityCount","getNewActivities","postActivityAttachment","attachment","deleteActivity","delete","deleteUser","loginSuccess","authState","payload","updateSuccess","displayName","image","loginHandler","credentials","dispatch","a","creds","auth","data","loginWithSocialHandler","user","signupHandler","UserLoginPage","setUsername","setPassword","setError","form","providerId","imageUrl","email","provider","useDispatch","onClickLogin","event","preventDefault","history","push","message","responseGoogle","accessToken","googleId","profileObj","givenName","tokenObj","idpId","t","useTranslation","buttonEnabled","class","style","display","flexWrap","appId","fields","callback","picture","graphDomain","cssClass","icon","color","size","textButton","clientId","buttonText","onSuccess","onFailure","cookiePolicy","target","value","role","UserSignupPage","passwordRepeatError","passwordRepeat","usersurname","university","branch","setForm","errors","setErrors","previousError","previousForm","onClickSignup","validationErrors","usernameError","displayNameError","passwordError","usersurnameError","emailError","universityError","branchError","Footer","i18n","onChangeLanguage","language","changeLanguage","stylex","position","left","bottom","height","width","marginTop","src","alt","cursor","ProfileImageWithDefault","tempimage","imageSource","defaultPicture","onError","AutoUploadImage","uploading","opacity","ActivitySubmit","useSelector","store","focused","setFocused","newImage","setNewImage","attachmentId","setAttachmentId","title","setTitle","description","setDescription","location","setLocation","Date","startDate","setStartDate","activityHour","setActivityHour","activityMinute","setActivityMinute","pendingFileUpload","uploadFile","file","FormData","append","onClickEvent","textAreaClass","rows","onFocus","selected","locale","date","files","length","fileReader","FileReader","onloadend","result","readAsDataURL","Modal","visible","onClickCancel","onClickOk","okButtonText","backgroundColor","ActivityView","loggedInUser","activity","onDeleteActivity","content","timestamp","fileAttachmentViewModel","modalVisible","setModalVisible","formatted","format","ownedByLoggedInUser","onClickDeleteActivity","fileType","marginLeft","to","Spinner","Activities","last","number","activityPage","setActivityPage","newActivityCount","setNewActivityCount","useParams","initialActivityLoadProgress","lastActivityId","firstActivityId","lastActivityIndex","oldActivityPath","loadOldActivitiesProgress","newActivitiesPath","loadNewActivitiesProgress","looper","setInterval","count","clearInterval","previousActivityPage","loadActivities","loadOldActivities","loadNewActivities","onDeleteActivitySuccess","filter","map","key","HomePage","ProfileCard","loggedInUsername","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","setUser","editable","setEditable","setValidationErrors","useHistory","pathUsername","pendingApiCallDeleteUser","previousValidationErrors","onClickEdit","split","onClickDeleteUser","imageError","temimage","UserPage","notFound","setNotFound","loadUser","fontSize","TopBar","menuArea","useRef","menuVisible","setMenuVisible","document","addEventListener","menuClickTracker","removeEventListener","current","contains","links","dropdownClass","ref","App","exact","component","Boolean","window","hostname","match","initReactI18next","init","resources","en","translations","tr","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","register","index","defaultState","authReducer","state","action","secureLs","SecureLS","initialState","appAuth","getStateFromStorage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","subscribe","newState","getState","set","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.83d9cdde.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    const { label, error, name, onChange, type, defaultValue } = props;\r\n    let className = 'form-control';\r\n    if (type === 'file') {\r\n        className += '-file'\r\n    }\r\n    if (error !== undefined) {\r\n        className += ' is-invalid';\r\n    }\r\n    return (\r\n        <div className=\"row px-3\">\r\n            <label className=\"mb-1\">\r\n                <h6 className=\"mb-0 text-sm\">{label}</h6>\r\n            </label>\r\n            <input className={className} name={name} onChange={onChange} type={type} defaultValue={defaultValue}></input>\r\n            <div className=\"invalid-feedback\">{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","\r\nimport React from 'react';\r\n\r\nconst ButtonWithProgress = (props) => {\r\n    const { onClick, pendingApiCall, disabled, text, className } = props;\r\n\r\n    return (\r\n        <button\r\n            className={className || \"btn btn-primary\"}\r\n            onClick={onClick} disabled={disabled}>\r\n            {pendingApiCall && <span className=\"spinner-border spinner-border-sm\" ></span>}{text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ButtonWithProgress;","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\r\n    const [pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let requestInterceptor, responseInterceptor;\r\n\r\n        const updateApiCallFor = (method, url, inProgress) => {\r\n            if (method !== apiMethod) {\r\n                return;\r\n            }\r\n            if (strictPath && url === apiPath) {\r\n                setPendingApiCall(inProgress);\r\n            }\r\n            else if (!strictPath && url.startsWith(apiPath)) {\r\n                setPendingApiCall(inProgress);\r\n            }\r\n        };\r\n\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                const { url, method } = request;\r\n                updateApiCallFor(method, url, true);\r\n                return request;\r\n            });\r\n            responseInterceptor = axios.interceptors.response.use((response) => {\r\n                const { url, method } = response.config;\r\n                updateApiCallFor(method, url, false);\r\n                return response;\r\n            },\r\n                (error) => {\r\n                    const { url, method } = error.config;\r\n                    updateApiCallFor(method, url, false);\r\n                    throw error;\r\n                });\r\n        };\r\n\r\n        const unRegisterInterceptor = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);\r\n        }\r\n\r\n\r\n        registerInterceptors();\r\n\r\n        return function unmount() {\r\n            unRegisterInterceptor();\r\n        }\r\n\r\n    }, [apiPath, apiMethod, strictPath])\r\n    return pendingApiCall;\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const signup = (body) => {\r\n    return axios.post('/api/createuser', body)\r\n};\r\n\r\nexport const login = creds => {\r\n    return axios.post('/api/auth', {}, { auth: creds });\r\n};\r\n\r\nexport const loginWithSocial = (body) => {\r\n    return axios.post('/api/loginSocial', body);\r\n};\r\n\r\nexport const changeLanguage = language => {\r\n    axios.defaults.headers['accept-language'] = language;\r\n};\r\n\r\nexport const getUsers = (page = 0, size = 3) => {\r\n    return axios.get(`/api/getusers?page=${page}&size=${size}`);\r\n}\r\n\r\nexport const getUser = username => {\r\n    return axios.get(`/api/users/${username}`);\r\n}\r\n\r\nexport const updateUser = (username, body) => {\r\n    const ret = axios.put(`/api/users/${username}`, body);\r\n    console.log(ret);\r\n    return ret;\r\n}\r\n\r\nexport const setAuthorizationHeader = ({ username, password, isLoggedIn }) => {\r\n    if (isLoggedIn) {\r\n        const authorizationHeaderValue = `Basic ${btoa(username + ':' + password)}`\r\n        axios.defaults.headers['Authorization'] = authorizationHeaderValue;\r\n    } else {\r\n        delete axios.defaults.headers['Authorization']\r\n    }\r\n}\r\n\r\nexport const createActivity = body => {\r\n    return axios.post('/api/createActivity', body)\r\n}\r\n\r\nexport const getActivities = (username, page = 0, size = 2) => {\r\n    const path = username ? `/api/users/${username}/activities?page=` : `/api/getActivities?page=`;\r\n    return axios.get(path + page);\r\n}\r\n\r\nexport const getOldActivities = (id, username) => {\r\n    const path = username ? `/api/users/${username}/activities/${id}` : `/api/getActivities/${id}`;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const getNewActivityCount = (id, username) => {\r\n    const path = username ? `/api/users/${username}/activities/${id}?count=true` : `/api/getActivities/${id}?count=true`;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const getNewActivities = (id, username) => {\r\n    const path = username ? `/api/users/${username}/activities/${id}?direction=after` : `/api/getActivities/${id}?direction=after`\r\n    return axios.get(path)\r\n}\r\n\r\nexport const postActivityAttachment = attachment => {\r\n    return axios.post('/api/activity-attachments', attachment)\r\n}\r\n\r\nexport const deleteActivity = id => {\r\n    return axios.delete(`/api/deleteActivity/${id}`)\r\n}\r\n\r\nexport const deleteUser = username => {\r\n    return axios.delete(`/api/users/delete/${username}`);\r\n} ","import * as ACTIONS from './Constants'\r\nimport { login, signup, loginWithSocial } from '../api/apiCalls';\r\n\r\nexport const logoutSucces = () => {\r\n    return {\r\n        type: ACTIONS.LOGOUT_SUCCESS\r\n    };\r\n}\r\n\r\nexport const loginSuccess = authState => {\r\n    return {\r\n        type: ACTIONS.LOGIN_SUCCESS,\r\n        payload: authState\r\n    }\r\n}\r\n\r\nexport const updateSuccess = ({ displayName, image }) => {\r\n    return {\r\n        type: ACTIONS.UPDATE_SUCCESS,\r\n        payload: {\r\n            displayName,\r\n            image\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginHandler = (credentials) => {\r\n    return async function (dispatch) {\r\n        const response = await login(credentials);\r\n        const authState = {\r\n            ...response.data,\r\n            password: credentials.password\r\n        };\r\n\r\n        dispatch(loginSuccess(authState));\r\n        return response;\r\n    }\r\n}\r\n\r\nexport const loginWithSocialHandler = (user) => {\r\n    return async function (dispatch) {\r\n        const response = await loginWithSocial(user);\r\n        const authState = {\r\n            ...user\r\n        };\r\n\r\n        dispatch(loginSuccess(authState));\r\n        return response;\r\n    }\r\n}\r\n\r\nexport const signupHandler = (user) => {\r\n    return async function (dispatch) {\r\n        const response = await signup(user);\r\n        //await dispatch(loginHandler(user)); //signup sonrası login için kullanılabilir ancak component üzerinde değişikliğe ihtiyaç olur.\r\n        return response;\r\n    }\r\n}","export const LOGOUT_SUCCESS = 'logout-success';\r\nexport const LOGIN_SUCCESS = 'login-success';\r\nexport const UPDATE_SUCCESS = 'update-success';","import React, { useState, useEffect } from 'react';\r\nimport Input from '../components/Input'\r\nimport { useTranslation } from 'react-i18next'\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress'\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginHandler, loginWithSocialHandler } from '../redux/authActions';\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport '../css/style.css';\r\nimport { FaFacebook, FaGoogle } from \"react-icons/fa\";\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nconst UserLoginPage = (props) => {\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n\r\n    var form = {\r\n        providerId: null, //response.googleId\r\n        username: null,//response.profileObj.givenName\r\n        displayName: null, // response.name\r\n        imageUrl: null, //response.profileObj.imageUrl\r\n        email: null,//response.profileObj.email\r\n        provider: null //response.tokenObj.idpId\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => { // username veya password'da bir değişim olduğunda, errorlar undefined oluyor.\r\n        setError(undefined);\r\n    }, [username, password])\r\n\r\n\r\n    const onClickLogin = async event => {\r\n        event.preventDefault();\r\n        const creds = {\r\n            username,\r\n            password\r\n        };\r\n        const { history } = props;\r\n        const { push } = history;\r\n\r\n        setError(undefined);\r\n        try {\r\n            await dispatch(loginHandler(creds));\r\n            push('/')\r\n        } catch (apiError) {\r\n            console.log(apiError.response);\r\n            setError(apiError.response.data.message);\r\n        }\r\n    };\r\n    //Facebook Area S\r\n    const componentClicked = data => {\r\n        console.log(\"data\", data);\r\n    };\r\n\r\n    const responseFacebook = response => {\r\n        console.log(response);\r\n\r\n        if (response.accessToken) {\r\n            const { history } = props;\r\n            const { push } = history;\r\n            setError(undefined);\r\n            try {\r\n                form = {\r\n                    providerId: response.id, //response.googleId\r\n                    username: response.name,//response.profileObj.givenName\r\n                    displayName: response.name, // response.name\r\n                    imageUrl: response.picture.data.url, //response.profileObj.imageUrl\r\n                    email: response.email,//response.profileObj.email\r\n                    provider: response.graphDomain//response.tokenObj.idpId\r\n                };\r\n                console.log(form);\r\n                dispatch(loginWithSocialHandler(form));\r\n                push('/');\r\n            } catch (error) {\r\n                setError(\"Something wrong in Facebook Login\");\r\n            }\r\n\r\n        }\r\n    };\r\n    //Facebook Area F Google S\r\n    const responseGoogle = (response) => {\r\n        console.log(response)\r\n\r\n        if (response.accessToken) {\r\n            const { history } = props;\r\n            const { push } = history;\r\n            setError(undefined);\r\n            try {\r\n\r\n                form = {\r\n                    providerId: response.googleId, //response.googleId\r\n                    username: response.profileObj.givenName,//response.profileObj.givenName\r\n                    displayName: response.profileObj.givenName, // response.name\r\n                    imageUrl: response.profileObj.imageUrl, //response.profileObj.imageUrl\r\n                    email: response.profileObj.email,//response.profileObj.email\r\n                    provider: response.tokenObj.idpId//response.tokenObj.idpId\r\n                };\r\n                console.log(form);\r\n                dispatch(loginWithSocialHandler(form));\r\n                push('/');\r\n            } catch (error) {\r\n                setError(\"Something wrong in Google Login\");\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    //Google F\r\n    const { t } = useTranslation();\r\n    const pendingApiCall = useApiProgress('post', '/api/auth');\r\n    const buttonEnabled = username && password;\r\n    return (\r\n        <div class=\"container-fluid px-1 px-md-5 px-lg-1 px-xl-5 py-5 mx-auto\">\r\n            <div class=\"card card0 border-0\">\r\n                <div class=\"row d-flex\">\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"card1 pb-5 card-body\">\r\n                            <h1 className=\"card-title\">TEHAPY</h1>\r\n                            <p className=\"card-text\"> {t('Tehapy Description')}</p>\r\n                            <p className=\"card-text\"> {t('Tehapy Activity Description')}</p>\r\n                            <p className=\"card-text\"> {t('Tehapy User Description')}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"card2 card border-0 px-4 py-5\">\r\n                            <div class=\"row mb-4 px-3\">\r\n                                <div class=\"text-center mr-4\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n\r\n                                    <FacebookLogin\r\n                                        appId=\"2978237078953063\"\r\n                                        fields=\"name,email,picture\"\r\n                                        onClick={componentClicked}\r\n                                        callback={responseFacebook}\r\n                                        cssClass=\"btnFacebook\"\r\n                                        icon={<FaFacebook color='white' size='1.4rem'></FaFacebook>}\r\n                                        textButton={t('Sign In with Facebook')}\r\n                                    />\r\n\r\n                                    <GoogleLogin\r\n                                        clientId=\"181124231251-7hfpmban9e79jkgllfph3rnp0i8o6t27.apps.googleusercontent.com\"\r\n                                        buttonText=\"Login\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseGoogle}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                        className=\"btnGoogle\"\r\n                                        buttonText={t('Sign In with Google')}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row px-3 mb-4\">\r\n                                <div class=\"line\"></div> <small class=\"or text-center\">Or</small>\r\n                                <div class=\"line\"></div>\r\n                            </div>\r\n                            <Input label={t('Username')} onChange={event => setUsername(event.target.value)} />\r\n                            <Input label={t('Password')} type=\"password\" onChange={event => setPassword(event.target.value)} />\r\n                            {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\r\n\r\n                            <ButtonWithProgress\r\n                                onClick={onClickLogin}\r\n                                disabled={!buttonEnabled || pendingApiCall}\r\n                                pendingApiCall={pendingApiCall}\r\n                                text={t('Login')} />\r\n\r\n                            <div class=\"row mb-4 px-3\"> <small class=\"font-weight-bold\">Don't have an account? <a class=\"text-danger\"></a></small> </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default UserLoginPage;","import React, { useState } from 'react';\r\nimport Input from '../components/Input'\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signupHandler } from '../redux/authActions';\r\nimport '../css/style.css';\r\n\r\nconst UserSignupPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [form, setForm] = useState({\r\n        username: null,\r\n        displayName: null,\r\n        password: null,\r\n        passwordRepeat: null,\r\n\r\n        email: null,\r\n        usersurname: null,\r\n        university: null,\r\n        branch: null,\r\n\r\n    })\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const onChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        setErrors((previousError) => ({ ...previousError, [name]: undefined }));\r\n\r\n        setForm((previousForm) => {\r\n            return {\r\n                ...previousForm,\r\n                [name]: value\r\n            }\r\n        });\r\n    };\r\n\r\n    const onClickSignup = async event => {\r\n        event.preventDefault();\r\n\r\n        const { history } = props; //signuphandler\r\n        const { push } = history; //signup handler\r\n        const { username, displayName, password, email, usersurname, university, branch } = form;\r\n        const body = {\r\n            username,\r\n            displayName,\r\n            password,\r\n            email,\r\n            usersurname,\r\n            university,\r\n            branch\r\n        }\r\n\r\n        try {\r\n            const response = await dispatch(signupHandler(body));\r\n            push('/login');\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                setErrors(error.response.data.validationErrors);\r\n            }\r\n        }\r\n\r\n    };\r\n    const { t } = useTranslation();\r\n    const { username: usernameError, displayName: displayNameError, password: passwordError, passwordRepeat, usersurname: usersurnameError, email: emailError, university: universityError, branch: branchError } = errors;\r\n    const pendingApiCall = useApiProgress('post', '/api/createuser');\r\n\r\n    let passwordRepeatError;\r\n    if (form.password !== form.passwordRepeat) {\r\n        passwordRepeatError = t('Password mismatch');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid px-1 px-md-5 px-lg-1 px-xl-5 py-5 mx-auto\">\r\n            <div className=\"card card0 border-0\">\r\n                <div class=\"row d-flex\">\r\n\r\n                    <div class=\"col-lg-2\">\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-8\">\r\n                        <h1 className=\"text-center\">{t('Sign Up')}</h1>\r\n                        <div class=\"card2 card border-0 px-1 py-3\">\r\n                            <div className=\"row\">\r\n                                <div class=\" mb-4 px-3 col-lg-6\">\r\n                                    <form>\r\n                                        <div className=\"form-group\">\r\n                                            <Input name=\"username\" label={t('Username')} error={usernameError} onChange={onChange} />\r\n                                            <Input name=\"usersurname\" label={t('User Surname')} error={usersurnameError} onChange={onChange} />\r\n                                            <Input name=\"password\" label={t('Password')} error={passwordError} onChange={onChange} type=\"password\" />\r\n                                            <Input name=\"passwordRepeat\" label={t('Password Repeat')} error={passwordRepeatError} onChange={onChange} type=\"password\" />\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div class=\" mb-4 px-3 col-lg-6\">\r\n                                    <form>\r\n                                        <div className=\"form-group\">\r\n                                            <Input name=\"email\" label={t('Email')} error={emailError} onChange={onChange} />\r\n                                            <Input name=\"displayName\" label={t('Display Name')} error={displayNameError} onChange={onChange} />\r\n                                            <Input name=\"university\" label={t('University')} error={universityError} onChange={onChange} />\r\n                                            <Input name=\"branch\" label={t('Branch')} error={branchError} onChange={onChange} />\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <ButtonWithProgress\r\n                                onClick={onClickSignup}\r\n                                disabled={pendingApiCall || passwordRepeatError !== undefined}\r\n                                pendingApiCall={pendingApiCall}\r\n                                text={t('Sign Up')} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-lg-2\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default UserSignupPage;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { changeLanguage } from '../api/apiCalls';\r\nimport \"react-icons/fa\";\r\n\r\nconst Footer = () => {\r\n\r\n    const { i18n } = useTranslation();\r\n    const onChangeLanguage = language => {\r\n        i18n.changeLanguage(language);\r\n        changeLanguage(language)\r\n    }\r\n\r\n    var stylex = {\r\n        position: \"fixed\",\r\n        left: \"0\",\r\n        bottom: \"0\",\r\n        height: \"40px\",\r\n        width: \"100%\",\r\n        marginTop: 20,\r\n    }\r\n\r\n    return (\r\n\r\n        <footer className=\"py-5 bg-dark\" style={{ stylex }}>\r\n            <div className=\"container\">\r\n                <p className=\"m-0 text-center text-white\">Created By Veli Adin - Copyright &copy; 2020. All rights reserved.\r\n                 <img src=\"https://www.countryflags.io/tr/flat/24.png\"\r\n                        alt=\"Turkish Flag\"\r\n                        onClick={() => onChangeLanguage('tr')}\r\n                        style={{ cursor: 'pointer' }}></img>\r\n\r\n                    <img src=\"https://www.countryflags.io/us/flat/24.png\"\r\n                        alt=\"USA Flag\"\r\n                        onClick={() => onChangeLanguage('en')}\r\n                        style={{ cursor: 'pointer' }}></img></p>\r\n\r\n\r\n            </div>\r\n        </footer>\r\n\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport defaultPicture from \"../assets/profile.png\";\r\n\r\nconst ProfileImageWithDefault = (props) => {\r\n  const { image, tempimage } = props;\r\n  let imageSource = defaultPicture;\r\n  if (image) {\r\n    imageSource = 'images/profile/' + image;\r\n  }\r\n  return (\r\n    <img\r\n      alt={`Profile`}\r\n      src={tempimage || imageSource}\r\n      {...props}\r\n      onError={(event) => {\r\n        event.target.src = defaultPicture\r\n      }}\r\n    ></img>\r\n  );\r\n};\r\n\r\nexport default ProfileImageWithDefault;\r\n","import React from 'react';\r\nimport './AutoUploadImage.css';\r\n\r\nconst AutoUploadImage = ({ image, uploading }) => {\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <img src={image} alt=\"activityImg\" className=\"img-thumbnail\" />\r\n            <div className=\"overlay\" style={{ opacity: uploading ? 1 : 0 }}>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"spinner-border text-light m-auto\">\r\n                        <span className=\"sr-only\"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AutoUploadImage;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { createActivity, postActivityAttachment } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport Input from '../components/Input';\r\nimport AutoUploadImage from '../components/AutoUploadImage';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nconst ActivitySubmit = () => {\r\n    const { image } = useSelector((store) => ({ image: store.image }));\r\n    const [focused, setFocused] = useState(false);\r\n\r\n    const { t } = useTranslation();\r\n    const [errors, setErrors] = useState({});\r\n    const [newImage, setNewImage] = useState();\r\n    const [attachmentId, setAttachmentId] = useState();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [activityHour, setActivityHour] = useState('');\r\n    const [activityMinute, setActivityMinute] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (!focused) {\r\n            setTitle('');\r\n            setDescription('');\r\n            setLocation('');\r\n            setStartDate('');\r\n            setActivityMinute('');\r\n            setActivityHour('');\r\n            setErrors({});\r\n            setNewImage();\r\n            setAttachmentId();\r\n        }\r\n    }, [focused]);\r\n\r\n    const pendingApiCall = useApiProgress('post', '/api/createActivity', true);\r\n    const pendingFileUpload = useApiProgress('post', \"/api/activity-attachments\", true);\r\n\r\n\r\n    useEffect(() => {\r\n        setErrors({})\r\n    }, [title]);\r\n\r\n    const onChangeFile = (event) => {\r\n        if (event.target.files.length < 1) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n            uploadFile(file);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    };\r\n\r\n    const uploadFile = async (file) => {\r\n        const attachment = new FormData();\r\n        attachment.append('image', file)\r\n        const response = await postActivityAttachment(attachment);\r\n        setAttachmentId(response.data.id);\r\n    }\r\n\r\n    const onClickEvent = async () => {\r\n        const body = {\r\n            title: title,\r\n            attachmentId: attachmentId,\r\n\r\n            description: description,\r\n            location: location,\r\n            startDate: startDate,\r\n            activityHour: activityHour,\r\n            activityMinute: activityMinute\r\n        };\r\n\r\n        try {\r\n            console.log(body);\r\n            await createActivity(body);\r\n            setFocused(false);\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                setErrors(error.response.data.validationErrors)\r\n            }\r\n        }\r\n    }\r\n\r\n    let textAreaClass = 'form-control';\r\n    if (errors.title) {\r\n        textAreaClass += ' is-invalid';\r\n    }\r\n    return (\r\n        <div className=\"card p-1 flex-row\">\r\n            <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle\" />\r\n            <div className=\"flex-fill\">\r\n                {focused && (\r\n                    <>\r\n                        <h6>{t('Enter the Title')}</h6>\r\n                    </>\r\n                )}\r\n                <textarea className={textAreaClass}\r\n                    rows={focused ? '1' : '1'}\r\n                    onFocus={() => setFocused(true)}\r\n                    onChange={(event) => setTitle(event.target.value)}\r\n                    value={title}\r\n                />\r\n                <div className=\"invalid-feedback\">{errors.title}</div>\r\n                {focused && (\r\n                    <>\r\n                        <h6>{t('Enter the Description')}</h6>\r\n                        <textarea className={textAreaClass}\r\n                            onChange={(event) => setDescription(event.target.value)}\r\n                            value={description}\r\n                        />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-7\">\r\n                                <h6>{t('When is the event?')}</h6>\r\n                                <DatePicker selected={startDate} locale=\"es\" onChange={date => setStartDate(date)} />\r\n                            </div>\r\n                            <div className=\"col-lg-5 d-flex align-items-center\">\r\n                                <Input label={t('Hour')} onChange={event => setActivityHour(event.target.value)}></Input> <Input label={t('Minute')} onChange={event => setActivityMinute(event.target.value)}></Input>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <Input label={t('Activity Location')} onChange={event => setLocation(event.target.value)}></Input>\r\n                        <h6>{t('Promotional Picture')}</h6>\r\n                        {!newImage && <Input type=\"file\" onChange={onChangeFile} />}\r\n                        {newImage && <AutoUploadImage image={newImage} uploading={pendingFileUpload} />}\r\n                        <div className=\"text-right mt-1\">\r\n\r\n\r\n                            <ButtonWithProgress className=\"btn btn-primary\"\r\n                                onClick={onClickEvent}\r\n                                text=\"Activity\"\r\n                                pendingApiCall={pendingApiCall}\r\n                                disabled={pendingApiCall || pendingFileUpload}\r\n                            />\r\n                            <button\r\n                                className=\"btn btn-light d-inline-flex ml-1\"\r\n                                onClick={() => setFocused(false)}\r\n                                disabled={pendingApiCall || pendingFileUpload}\r\n\r\n                            >\r\n                                <i className=\"material-icons\">close</i>\r\n                                {t('Cancel')}\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivitySubmit;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nconst Modal = (props) => {\r\n    const { visible, onClickCancel, message, onClickOk, pendingApiCall, title, okButtonText } = props;\r\n    const { t } = useTranslation();\r\n    let className = 'modal fade';\r\n    if (visible) {\r\n        className += ' show d-block'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={className} style={{ backgroundColor: '#000000b0' }} >\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">{title}</h5>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {message}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\"\r\n                            className=\"btn btn-secondary\"\r\n                            onClick={onClickCancel}\r\n                            disabled={pendingApiCall}>\r\n                            {t('Cancel')}\r\n                        </button>\r\n\r\n                        <ButtonWithProgress\r\n                            className=\"btn btn-danger\"\r\n                            onClick={onClickOk}\r\n                            pendingApiCall={pendingApiCall}\r\n                            text={okButtonText}\r\n                            disabled={pendingApiCall}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport ProfileImageWithDefault from '../components/ProfileImageWithDefault';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'timeago.js'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport { deleteActivity } from '../api/apiCalls';\r\nimport Modal from './Modal';\r\nimport { useState } from 'react';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\n\r\nconst ActivityView = (props) => {\r\n    const loggedInUser = useSelector(store => store.username);\r\n    const { activity, onDeleteActivity } = props;\r\n    const { user, content, timestamp, fileAttachmentViewModel, id } = activity;\r\n    const { username, image } = user;\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const { t } = useTranslation();\r\n    const { i18n } = useTranslation();\r\n\r\n    const formatted = format(timestamp, i18n.language);\r\n\r\n    const ownedByLoggedInUser = loggedInUser === username;\r\n\r\n    const pendingApiCall = useApiProgress('delete', `/api/deleteActivity/${id}`, true);\r\n\r\n    const onClickDeleteActivity = async () => {\r\n        await deleteActivity(id);\r\n        onDeleteActivity(id);\r\n    };\r\n    const onClickCancel = () => {\r\n        setModalVisible(false);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"card mb-3\">\r\n                <div className=\"row no-gutters d-flex\">\r\n                    <div className=\"col-md-3\">\r\n                        {fileAttachmentViewModel && (\r\n                            <div>\r\n                                {fileAttachmentViewModel.fileType.startsWith('image') && (\r\n                                    <img className=\"img-fluid\" src={'images/attachments/' + fileAttachmentViewModel.name} alt={content} />\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\"> {activity.id} - {activity.title}</h4>\r\n                            <p className=\"card-text\">{activity.description}</p>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <h6>{t('Location')}{\" : \" + activity.location}</h6>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <h6>{t('When')}{\" : \" + activity.activityHour}{\":\" + activity.activityMinute}</h6>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {ownedByLoggedInUser && (<button\r\n                        className=\"btn btn-delete-link m-auto\"\r\n                        style={{ marginLeft: 50 }}\r\n                        onClick={() => setModalVisible(true)}\r\n                    >\r\n                        <span className=\"material-icons\">\r\n                            delete_outline\r\n                    </span>\r\n                    </button>)}\r\n                </div>\r\n                <div className=\"card-footer text-muted d-flex\">\r\n                    <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle m-1\" />\r\n\r\n                    <p className=\"flex-fill m-auto pl-2\">\r\n                        {formatted} tarihinde <Link to={`/user/${username}`} className=\"text-dark\">\r\n                            {username}\r\n                        </Link> tarafından oluşturuldu.\r\n                </p>\r\n                </div>\r\n            </div>\r\n            <Modal visible={modalVisible}\r\n                onClickCancel={onClickCancel}\r\n                onClickOk={onClickDeleteActivity}\r\n                title={t('Delete Activity')}\r\n\r\n                message={\r\n                    <>\r\n                        <p><strong>{t('Are you sure to delete activity?')}</strong></p>\r\n                        {activity.title}\r\n                    </>\r\n                }\r\n                pendingApiCall={pendingApiCall}\r\n                okButtonText={t('Delete Activity')}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActivityView;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-black-50\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getActivities, getOldActivities, getNewActivityCount, getNewActivities } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ActivityView from './ActivityView';\r\nimport Spinner from '../components/Spinner';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Activities = () => {\r\n\r\n    const [activityPage, setActivityPage] = useState({ content: [], last: true, number: 0 });\r\n    const [newActivityCount, setNewActivityCount] = useState(0);\r\n    const { t } = useTranslation();\r\n    const { username } = useParams();\r\n\r\n\r\n    const path = username ? `/api/users/${username}/activities?page=` : `/api/getActivities?page=`;\r\n    const initialActivityLoadProgress = useApiProgress('get', path);\r\n\r\n    let lastActivityId = 0;\r\n    let firstActivityId = 0;\r\n    if (activityPage.content.length > 0) {\r\n        firstActivityId = activityPage.content[0].id;\r\n        const lastActivityIndex = activityPage.content.length - 1;\r\n        lastActivityId = activityPage.content[lastActivityIndex].id;\r\n\r\n    }\r\n    const oldActivityPath = username ? `/api/users/${username}/activities/${lastActivityId}` : `/api/getActivities/${lastActivityId}`;\r\n    const loadOldActivitiesProgress = useApiProgress('get', oldActivityPath, true)\r\n\r\n    const newActivitiesPath = username ? `/api/users/${username}/activities/${firstActivityId}?direction=after` : `/api/getActivities/${firstActivityId}?direction=after`\r\n\r\n    const loadNewActivitiesProgress = useApiProgress('get', newActivitiesPath, true)\r\n\r\n\r\n    useEffect(() => {\r\n        const getCount = async () => {\r\n            const response = await getNewActivityCount(firstActivityId, username);\r\n            setNewActivityCount(response.data.count);\r\n        }\r\n        let looper = setInterval(getCount, 1000);\r\n        ;\r\n        return function cleanup() {\r\n            clearInterval(looper);\r\n        }\r\n    }, [firstActivityId, username])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const loadActivities = async page => {\r\n            try {\r\n                const response = await getActivities(username, page);\r\n                setActivityPage(previousActivityPage => ({\r\n                    ...response.data,\r\n                    content: [...previousActivityPage.content, ...response.data.content]\r\n                }))\r\n            } catch (error) { }\r\n        };\r\n        loadActivities();\r\n    }, [username]);\r\n\r\n\r\n    const loadOldActivities = async () => {\r\n\r\n        const response = await getOldActivities(lastActivityId, username);\r\n        setActivityPage(previousActivityPage => ({\r\n            ...response.data,\r\n            content: [...previousActivityPage.content, ...response.data.content]\r\n        }))\r\n    }\r\n\r\n    const loadNewActivities = async () => {\r\n        const response = await getNewActivities(firstActivityId, username);\r\n        setActivityPage(previousActivityPage => ({\r\n            ...previousActivityPage,\r\n            content: [...response.data, ...previousActivityPage.content]\r\n        }));\r\n        setNewActivityCount(0);\r\n    }\r\n\r\n    const onDeleteActivitySuccess = (id) => {\r\n        setActivityPage(previousActivityPage => ({\r\n            ...previousActivityPage,\r\n            content: previousActivityPage.content.filter((activity) => {\r\n                if (activity.id !== id) {\r\n                    return true\r\n                }\r\n                return false;\r\n            })\r\n        }))\r\n    }\r\n\r\n    const { content, last } = activityPage;\r\n\r\n    if (content.length === 0) {\r\n        return <div className=\"alert alert-secondary text-center\">\r\n            {initialActivityLoadProgress ? <Spinner /> : t('There are no activities')}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {newActivityCount > 0 && (\r\n                <div className=\"alert alert-secondary text-center\"\r\n                    style={{ cursor: loadNewActivitiesProgress ? 'not-allowed' : 'pointer' }}\r\n                    onClick={loadNewActivitiesProgress ? () => { } : () => loadNewActivities()}\r\n                >\r\n                    {loadNewActivitiesProgress ? <Spinner /> : t('There are new activities')}\r\n                </div>\r\n            )}\r\n            {content.map(activity => {\r\n                return <ActivityView key={activity.id} activity={activity} onDeleteActivity={onDeleteActivitySuccess}></ActivityView>\r\n            })}\r\n            {!last &&\r\n                <div\r\n                    className=\"alert alert-secondary text-center\"\r\n                    style={{ cursor: loadOldActivitiesProgress ? 'not-allowed' : 'pointer' }}\r\n                    onClick={loadOldActivitiesProgress ? () => { } : () => loadOldActivities()}\r\n                >\r\n                    {loadOldActivitiesProgress ? <Spinner /> : t('Load new activities')}\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Activities;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ActivitySubmit from '../components/ActivitySubmit';\r\nimport Activities from '../components/Activities';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst HomePage = () => {\r\n    const { isLoggedIn } = useSelector(store => ({ isLoggedIn: store.isLoggedIn }));\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {isLoggedIn &&\r\n                    <div className=\"col-md-6\">\r\n                        <h1 className=\"my-4\">{t('Create Activity')}</h1>\r\n                        <ActivitySubmit />\r\n                    </div>}\r\n                <div className=\"col-md-6\">\r\n                    <h1 className=\"my-4\">{t('Activities')}</h1>\r\n                    <Activities />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        /*\r\n            <div className=\"container\">\r\n                <UserList />\r\n            </div>\r\n        */\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Input from \"../components/Input\";\r\nimport { deleteUser, updateUser } from \"../api/apiCalls\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { logoutSucces, updateSuccess } from '../redux/authActions'\r\nimport Activities from \"./Activities\";\r\nimport Modal from './Modal';\r\n\r\n\r\nconst ProfileCard = (props) => {\r\n  const { username: loggedInUsername } = useSelector((store) => {\r\n    return {\r\n      username: store.username,\r\n    };\r\n  });\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n  const [user, setUser] = useState({});\r\n  const [editable, setEditable] = useState(false);\r\n  const [newImage, setNewImage] = useState();\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //const { user } = props;\r\n  const routeParams = useParams();\r\n  const pathUsername = routeParams.username;\r\n\r\n  useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    setEditable(pathUsername === loggedInUsername)\r\n  }, [pathUsername, loggedInUsername])\r\n\r\n  const { username, displayName, image, branch, usersurname, email, university } = user;\r\n\r\n  const pendingApiCallDeleteUser = useApiProgress('delete', `/api/users/delete/${username}`, true);\r\n\r\n\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!inEditMode) {\r\n      setUpdatedDisplayName(undefined);\r\n      setNewImage(undefined);\r\n    } else {\r\n      setUpdatedDisplayName(displayName);\r\n    }\r\n  }, [inEditMode, displayName]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors((previousValidationErrors) => {\r\n      return {\r\n        ...previousValidationErrors,\r\n        displayName: undefined\r\n      }\r\n    });\r\n  }, [updatedDisplayName])\r\n\r\n  useEffect(() => {\r\n    setValidationErrors((previousValidationErrors) => {\r\n      return {\r\n        ...previousValidationErrors,\r\n        image: undefined\r\n      }\r\n    });\r\n  }, [newImage])\r\n\r\n  const onClickEdit = async () => {\r\n    let image;\r\n    if (newImage) {\r\n      image = newImage.split(',')[1];\r\n    }\r\n    const body = {\r\n      displayName: updatedDisplayName,\r\n      image\r\n    };\r\n    try {\r\n      const response = await updateUser(username, body);\r\n      setInEditMode(false);\r\n      setUser(response.data)\r\n      dispatch(updateSuccess(response.data));\r\n    } catch (error) {\r\n      setValidationErrors(error.response.data.validationErrors);\r\n    }\r\n  }\r\n\r\n  const onChangeFile = (event) => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n    }\r\n    fileReader.readAsDataURL(file);\r\n  }\r\n\r\n  const onClickCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onClickDeleteUser = async () => {\r\n    await deleteUser(username);\r\n    setModalVisible(false);\r\n    dispatch(logoutSucces());\r\n    history.push('/');\r\n  }\r\n\r\n\r\n  let message = \"We cannot edit\";\r\n  if (pathUsername === loggedInUsername) {\r\n    message = \"We can edit\";\r\n  }\r\n  const pendingApiCall = useApiProgress('put', '/api/users/' + username);\r\n\r\n  const { displayName: displayNameError, image: imageError } = validationErrors;\r\n  return (\r\n\r\n    <div className=\"container\">\r\n      <br></br>\r\n      <div className=\"main-body\">\r\n        <div className=\"row gutters-sm\">\r\n          <div className=\"col-md-4 mb-3\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex flex-column align-items-center text-center\">\r\n                  <ProfileImageWithDefault\r\n                    className=\"rounded-circle shadow\"\r\n                    width=\"150\"\r\n                    height=\"160\"\r\n                    alt={`${username} profile`}\r\n                    image={image}\r\n                    temimage={newImage}\r\n                  />\r\n\r\n\r\n\r\n                  <div className=\"mt-3\">\r\n                    {(!inEditMode &&\r\n                      <h4>{displayName}</h4>)}\r\n\r\n                    {editable && (\r\n                      <>\r\n                        <button\r\n                          className=\"btn btn-success  d-inline-flex\"\r\n                          onClick={() => setInEditMode(true)}>\r\n                          <span className=\"material-icons\">edit</span>\r\n                          {t('Edit')}\r\n                        </button>\r\n                        <div className=\"pt-2\">\r\n                          <button\r\n                            className=\"btn btn-danger d-inline-flex\"\r\n                            onClick={() => setModalVisible(true)}>\r\n                            <span className=\"material-icons\">person_remove</span>\r\n                            {t('Delete My Account')}\r\n                          </button>\r\n                        </div>\r\n\r\n                      </>\r\n                    )}\r\n\r\n\r\n                    {(inEditMode && (\r\n                      <div>\r\n                        <Input\r\n                          label={t('Change Display Name')}\r\n                          defaultValue={displayName}\r\n                          onChange={(event) => {\r\n                            setUpdatedDisplayName(event.target.value)\r\n                          }}\r\n                          error={displayNameError}\r\n                        />\r\n                        <Input type=\"file\" onChange={onChangeFile} error={imageError} />\r\n                        <div>\r\n                          <ButtonWithProgress\r\n                            className=\"btn btn-primary d-inline-flex\"\r\n                            onClick={onClickEdit}\r\n                            disabled={pendingApiCall}\r\n                            pendingApiCall={pendingApiCall}\r\n                            text={\r\n                              <>\r\n                                <i className=\"material-icons\">save</i>\r\n                                {t('Save')}\r\n                              </>\r\n                            }\r\n                          />\r\n                          <button\r\n                            className=\"btn btn-light d-inline-flex ml-1\"\r\n                            onClick={() => setInEditMode(false)}\r\n                            disabled={pendingApiCall}>\r\n                            <i className=\"material-icons\">close</i>\r\n                            {t('Cancel')}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                    <br></br><br></br>\r\n                    <p className=\"text-secondary mb-1\"><strong>{branch}</strong></p>\r\n                    <button className=\"btn btn-primary\">{t('Follow')}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3\">\r\n                    <h6 className=\"mb-0\">{t('Name and Surname')}</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 text-secondary\">\r\n                    {username + \" \" + usersurname}\r\n                  </div>\r\n                </div>\r\n                <hr></hr>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3\">\r\n                    <h6 className=\"mb-0\">{t('Email')}</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 text-secondary\">\r\n                    {email}\r\n                  </div>\r\n                </div>\r\n                <hr></hr>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3\">\r\n                    <h6 className=\"mb-0\">{t('University')}</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 text-secondary\">\r\n                    {university}\r\n                  </div>\r\n                </div>\r\n                <hr></hr>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-3\">\r\n                    <h6 className=\"mb-0\">{t('Branch')}</h6>\r\n                  </div>\r\n                  <div className=\"col-sm-9 text-secondary\">\r\n                    {branch}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"col-sm-12 mb-12\">\r\n              <h4 className=\"card-title\">{t('Events to Attend')}</h4>\r\n              <div className=\"card h-100\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"col-12\">\r\n                    <Activities />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal visible={modalVisible}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDeleteUser}\r\n        title={t('Delete My Account')}\r\n        okButtonText={t('Delete My Account')}\r\n        pendingApiCall={pendingApiCallDeleteUser}\r\n        message=\r\n        {\r\n          <>{\r\n            <strong>\r\n              {t('Are you sure to delete your account?')}\r\n            </strong>\r\n          }\r\n          </>\r\n        }\r\n      //pendingApiCall={pendingApiCall}\r\n      />\r\n    </div>\r\n\r\n\r\n    /*\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"150\"\r\n          height=\"160\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n          temimage={newImage}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {(!inEditMode &&\r\n          <>\r\n            <h4>\r\n              {displayName}\r\n              {username}\r\n            </h4>\r\n\r\n            {editable && <button\r\n              className=\"btn btn-success  d-inline-flex\"\r\n              onClick={() => setInEditMode(true)}>\r\n              <span className=\"material-icons\">edit</span>\r\n              {t('Edit')}</button>}\r\n          </>\r\n        )}\r\n        {(inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t('Change Display Name')}\r\n              defaultValue={displayName}\r\n              onChange={(event) => {\r\n                setUpdatedDisplayName(event.target.value)\r\n              }} />\r\n            <input type=\"file\" onChange={onChangeFile} />\r\n            <div>\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary d-inline-flex\"\r\n                onClick={onClickEdit}\r\n                disabled={pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={\r\n                  <>\r\n                    <i className=\"material-icons\">save</i>\r\n                    {t('Save')}\r\n                  </>\r\n                }\r\n              />\r\n\r\n\r\n              <button\r\n                className=\"btn btn-light d-inline-flex ml-1\"\r\n                onClick={() => setInEditMode(false)}\r\n                disabled={pendingApiCall}>\r\n                <i className=\"material-icons\">close</i>\r\n                {t('Cancel')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n\r\n      </div>\r\n\r\n    </div>*/\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ProfileCard from \"../components/ProfileCard\";\r\nimport { getUser } from \"../api/apiCalls\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from \"../components/Spinner\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst UserPage = (props) => {\r\n\r\n  const [user, setUser] = useState({});\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  const { username } = useParams(); //or useParams();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const pendingApiCall = useApiProgress('get', '/api/users/' + username, true);\r\n\r\n\r\n  useEffect(() => {\r\n    setNotFound(false);\r\n  }, [user]);\r\n\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        const response = await getUser(username);\r\n        setUser(response.data);\r\n        setNotFound(false);\r\n      } catch (error) {\r\n        setNotFound(true);\r\n      }\r\n    };\r\n    loadUser();\r\n  }, [username]);\r\n\r\n\r\n  if (notFound) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          <div>\r\n            <span class=\"material-icons\" style={{ fontSize: \"48px\" }}>\r\n              error\r\n            </span>\r\n          </div>\r\n          {t(\"User not found.\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  if (pendingApiCall || user.username !== username) {\r\n    return <Spinner />\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ProfileCard user={user} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React from 'react';\r\nimport icon from '../assets/icon-light.png';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutSucces } from '../redux/authActions';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useRef } from 'react';\r\n\r\nconst TopBar = (props) => {\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const { username, isLoggedIn, displayName, image } = useSelector((store) => { //reduxState'ten alıyoruz gibi...\r\n        return {\r\n            isLoggedIn: store.isLoggedIn,\r\n            username: store.username,\r\n            displayName: store.displayName,\r\n            image: store.image,\r\n        }\r\n    })\r\n\r\n\r\n    const menuArea = useRef(null);\r\n    const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', menuClickTracker);\r\n        return () => {\r\n            document.removeEventListener('click', menuClickTracker);\r\n        }\r\n    }, [isLoggedIn]);\r\n\r\n    const menuClickTracker = (event) => {\r\n        if (menuArea.current === null || !menuArea.current.contains(event.target)) {\r\n            setMenuVisible(false);\r\n        }\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogoutSuccess = () => {\r\n        dispatch(logoutSucces());\r\n    }\r\n\r\n\r\n    let links = (\r\n        <div className=\"collapse navbar-collapse\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\"\r\n                        to=\"/\">{t('Events')}</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\"\r\n                        to=\"/login\">{t('Login')}</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link className=\"nav-link\"\r\n                        to=\"/signup\">{t('Sign Up')}</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n\r\n    );\r\n    if (isLoggedIn) {\r\n        let dropdownClass = 'dropdown-menu p-0 shadow';\r\n        if (menuVisible) {\r\n            dropdownClass += ' show';\r\n        }\r\n        links = (\r\n            <div className=\"collapse navbar-collapse \">\r\n                <ul className=\"navbar-nav ml-auto \">\r\n                    <li className=\"nav-item mr-2\">\r\n                        <Link className=\"nav-link \" style={{ fontSize: '20px', color: 'white' }}\r\n                            to=\"/\">{t('Events')}</Link>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\" ref={menuArea} >\r\n                        <div className=\"d-flex\" style={{ cursor: 'pointer' }} onClick={() => setMenuVisible(true)}>\r\n                            <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle m-auto\" />\r\n                            <span className=\"nav-link dropdown-toggle\" style={{ fontSize: '20px', color: 'white' }}>\r\n                                {displayName}\r\n                            </span>\r\n                        </div>\r\n                        <div className={dropdownClass} style={{ cursor: 'pointer' }} >\r\n                            <Link className=\"nav-link dropdown-item d-flex p-2\"\r\n                                onClick={() => setMenuVisible(false)}\r\n                                style={{ color: 'black' }}\r\n                                to={'/user/' + username}>\r\n                                <span className=\"material-icons text-info mr-2\">\r\n                                    person\r\n                                </span>\r\n                                {t('My Profile')}\r\n                            </Link>\r\n                            <span className=\"nav-link dropdown-item d-flex p-2\"\r\n                                onClick={onLogoutSuccess}\r\n                                style={{ cursor: 'pointer', color: 'black' }}>\r\n                                <span className=\"material-icons text-danger mr-2\">\r\n                                    power_settings_new\r\n                                </span>\r\n                                {t('Logout')}\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n\r\n\r\n                </ul>\r\n            </div >\r\n        )\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand text-\" to=\"/\">\r\n                    <img src={icon} width=\"50\" alt=\"icon\" /> TEHAPY\r\n                </Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nexport default TopBar;\r\n","import React from 'react';\nimport UserLoginPage from './pages/UserLoginPage';\nimport UserSignupPage from './pages/UserSignupPage';\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport UserPage from './pages/UserPage';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport TopBar from './components/TopBar';\nimport { useSelector } from 'react-redux'\n\n\nconst App = () => {\n\n  const { isLoggedIn } = useSelector((store) => ({\n    isLoggedIn: store.isLoggedIn\n  }))\n\n  return (\n    <div>\n      <Router >\n        <TopBar />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          {!isLoggedIn && <Route path=\"/login\"\n            component={UserLoginPage} />}\n          <Route path=\"/signup\" component={UserSignupPage} />\n          <Route path=\"/user/:username\" component={UserPage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport { register } from 'timeago.js';\r\ni18n.use(initReactI18next).init({\r\n    resources: {\r\n        en: {\r\n            translations: {\r\n                'Sign Up': 'Sign Up',\r\n                'Password mismatch': 'Password mismatch',\r\n                'Username': 'Username',\r\n                'Display Name': 'Display Name',\r\n                'Password': 'Password',\r\n                'Password Repeat': 'Password Repeat',\r\n                'Login': 'Login',\r\n                'Logout': 'Logout',\r\n                'Users': 'Users',\r\n                \"Next\": \"next > \",\r\n                \"Previous\": \"< previous\",\r\n                \"Load Failure\": \"Load Failure\",\r\n                \"User not found.\": \"User not found.\",\r\n                \"Edit\": \"Edit\",\r\n                \"Change Display Name\": \"Change Display Name\",\r\n                \"Save\": \"Save\",\r\n                \"Cancel\": \"Cancel\",\r\n                \"Events\": \"Events\",\r\n                \"My Profile\": \"My Profile\",\r\n                \"There are no activities\": \"There are no activities\",\r\n                \"Activities\": \"Activities\",\r\n                \"Create Activity\": \"Create Activity\",\r\n                \"Tehapy Description\": \"Tehapy provides the easiest way for you to attend events within or out of the university.\",\r\n                \"Tehapy Activity Description\": \"You can list the events according to your interests, go to an event page to have detailed information, and apply to the events with application forms.\",\r\n                \"Tehapy User Description\": \"Also, you can apply to a community that interests you and have an active role in that community's events.\",\r\n                \"Sign In with Facebook\": \"Sign In with Facebook\",\r\n                \"Sign In with Google\": \"Sign In with Google\",\r\n                \"Load new activities\": \"Load new activities\",\r\n                \"There are new activities\": \"There are new activities\",\r\n                \"Delete Activity\": \"Delete Activity\",\r\n                \"Are you sure to delete activity?\": \"Are you sure to delete activity?\",\r\n                \"Delete My Account\": \"Delete My Account\",\r\n                \"Are you sure to delete your account?\": \"Are you sure to delete your account?\",\r\n                \"Follow\": \"Follow\",\r\n                \"Name and Surname\": \"Name and Surname\",\r\n                \"Email\": \"Email\",\r\n                \"University\": \"University\",\r\n                \"Branch\": \"Branch\",\r\n                \"Events to Attend\": \"Events to Attend\",\r\n                \"Enter the Title\": \"Enter the Title\",\r\n                \"Enter the Description\": \"Enter the Description\",\r\n                \"When is the event?\": \"When is the event?\",\r\n                \"Hour\": \"Hour\",\r\n                \"Minute\": \"Minute\",\r\n                \"Activity Location\": \"Activity Location\",\r\n                \"Promotional Picture\": \"Promotional Picture\",\r\n                \"Location\": \"Location\",\r\n                \"When\": \"When\"\r\n            }\r\n        },\r\n        tr: {\r\n            translations: {\r\n                'Sign Up': 'Kayıt Ol',\r\n                'Password mismatch': 'Şifreniz eşleşmiyor',\r\n                'Username': 'Kullanıcı Adı',\r\n                'Display Name': 'Tercih edilen isim',\r\n                'Password': 'Şifre',\r\n                'Password Repeat': 'Şifre Tekrar',\r\n                'Login': 'Giriş Yap',\r\n                'Logout': 'Çıkış Yap',\r\n                'Users': 'Kullanıcılar',\r\n                \"Next\": \"sonraki > \",\r\n                \"Previous\": \"< önceki\",\r\n                \"Load Failure\": \"Liste yüklenemedi\",\r\n                \"User not found.\": \"Kullanıcı bulunamadı.\",\r\n                \"Edit\": \"Düzenle\",\r\n                \"Change Display Name\": \"Kullanıcı Adınızı Değiştiriniz\",\r\n                \"Save\": \"Kaydet\",\r\n                \"Cancel\": \"İptal et\",\r\n                \"Events\": \"Etkinlikler\",\r\n                \"My Profile\": \"Hesabım\",\r\n                \"There are no activities\": \"Etkinlik bulunamadı\",\r\n                \"Activities\": \"Etkinlikler\",\r\n                \"Create Activity\": \"Etkinlik Oluştur\",\r\n                \"Tehapy Description\": \"Tehapy üniversite ve üniversite dışındaki toplulukların, etkinliklerine katılabilmenizi en kolay yoldan sağlar.\",\r\n                \"Tehapy Activity Description\": \"İlginizi çeken kategorilere göre etkinlikleri listeleyip, etkinliğin sayfasına girip detaylı bilgi alabilir ve başvuru formu üzerinde etkinliğe başvuru yapabilirsiniz.\",\r\n                \"Tehapy User Description\": \"Ayrıca ilginizi çeken bir topluluğa başvurunuzu da yapabilir ve topluluğun etkinlikerinde aktif rol alabilirsiniz.\",\r\n                \"Sign In with Facebook\": \"Facebook ile giriş yap\",\r\n                \"Sign In with Google\": \"Google ile giriş yap\",\r\n                \"Load new activities\": \"Yeni etkinlikleri göster\",\r\n                \"There are new activities\": \"Yeni etkinlikler var\",\r\n                \"Delete Activity\": \"Etkinliği sil\",\r\n                \"Are you sure to delete activity?\": \"Etkinliği silmek istediğinizde emin misiniz?\",\r\n                \"Delete My Account\": \"Hesabımı sil\",\r\n                \"Are you sure to delete your account?\": \"Hesabını silmek istediğine emin misin?\",\r\n                \"Follow\": \"Takip Et\",\r\n                \"Name and Surname\": \"Adı ve Soyadı\",\r\n                \"Email\": \"Email\",\r\n                \"University\": \"Üniversite\",\r\n                \"Branch\": \"Bölüm\",\r\n                \"Events to Attend\": \"Katılacağı Etkinlikler\",\r\n                \"Enter the Title\": \"Başlık\",\r\n                \"Enter the Description\": \"Açıklama\",\r\n                \"When is the event?\": \"Etkinlik ne zaman?\",\r\n                \"Hour\": \"Saat\",\r\n                \"Minute\": \"Dakika\",\r\n                \"Activity Location\": \"Etkinlik yeri\",\r\n                \"Promotional Picture\": \"Tanıtım Resmi\",\r\n                \"Location\": \"Yer\",\r\n                \"When\": \"Ne zaman\",\r\n            }\r\n        }\r\n    },\r\n    fallbackLng: 'tr',\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n        escapeValue: false,\r\n        formatSeparator: ','\r\n    },\r\n    react: {\r\n        wait: true\r\n    }\r\n});\r\n\r\nconst timeagoTR = (number, index) => {\r\n    return [\r\n        ['az önce', 'şimdi'],\r\n        ['%s saniye önce', '%s saniye içinde'],\r\n        ['1 dakika önce', '1 dakika içinde'],\r\n        ['%s dakika önce', '%s dakika içinde'],\r\n        ['1 saat önce', '1 saat içinde'],\r\n        ['%s saat önce', '%s saat içinde'],\r\n        ['1 gün önce', '1 gün içinde'],\r\n        ['%s gün önce', '%s gün içinde'],\r\n        ['1 hafta önce', '1 hafta içinde'],\r\n        ['%s hafta önce', '%s hafta içinde'],\r\n        ['1 ay önce', '1 ay içinde'],\r\n        ['%s ay önce', '%s ay içinde'],\r\n        ['1 yıl önce', '1 yıl içinde'],\r\n        ['%s yıl önce', '%s yıl içinde'],\r\n    ][index];\r\n}\r\nregister('tr', timeagoTR);\r\nexport default i18n;","import * as ACTIONS from './Constants';\r\n\r\nconst defaultState = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined,\r\n    email: undefined,\r\n    branch: undefined,\r\n}\r\n\r\nconst authReducer = (state = { ...defaultState }, action) => {\r\n    if (action.type === ACTIONS.LOGOUT_SUCCESS) {\r\n        return defaultState;\r\n    } else if (action.type === ACTIONS.LOGIN_SUCCESS) {\r\n        return {\r\n            ...action.payload,\r\n            isLoggedIn: true\r\n        }\r\n    } else if (action.type === ACTIONS.UPDATE_SUCCESS) {\r\n        return {\r\n            ...state,\r\n            ...action.payload\r\n\r\n            //veya action.payload\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default authReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\nimport thunk from 'redux-thunk';\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n    const appAuth = secureLs.get('app-auth');\r\n\r\n    let stateInLocalStorage = {\r\n        isLoggedIn: false,\r\n        username: undefined,\r\n        displayName: undefined,\r\n        image: undefined,\r\n        password: undefined,\r\n        email: undefined,\r\n        picture: undefined,\r\n    }\r\n\r\n    if (appAuth) {\r\n        return appAuth;\r\n    }\r\n    return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = newState => {\r\n    secureLs.set('app-auth', newState);\r\n\r\n};\r\n\r\nconst configureStore = () => {\r\n    const initialState = getStateFromStorage();\r\n    setAuthorizationHeader(initialState);\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n    store.subscribe(() => {//store'da her hangi bir değişimde arkadak çalışacak\r\n        updateStateInStorage(store.getState());\r\n        setAuthorizationHeader(store.getState());\r\n    });\r\n\r\n    return store;\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap-override.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './118n';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile.926fda93.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-light.cbb9dab1.png\";"],"sourceRoot":""}