{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\src\\\\components\\\\ActivitySubmit.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\nimport { createActivity, postActivityAttachment } from '../api/apiCalls';\nimport { useApiProgress } from '../shared/ApiProgress';\nimport ButtonWithProgress from '../components/ButtonWithProgress';\nimport Input from '../components/Input';\nimport AutoUploadImage from '../components/AutoUploadImage';\n\nconst ActivitySubmit = () => {\n  const {\n    image\n  } = useSelector(store => ({\n    image: store.image\n  }));\n  const [focused, setFocused] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const [errors, setErrors] = useState({});\n  const [newImage, setNewImage] = useState();\n  const [attachmentId, setAttachmentId] = useState();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [location, setLocation] = useState('');\n  const [startDate, setStartDate] = useState(new Date());\n  useEffect(() => {\n    if (!focused) {\n      setTitle('');\n      setDescription('');\n      setLocation('');\n      setStartDate('');\n      setErrors({});\n      setNewImage();\n      setAttachmentId();\n    }\n  }, [focused]);\n  const pendingApiCall = useApiProgress('post', '/api/createActivity', true);\n  const pendingFileUpload = useApiProgress('post', \"/api/activity-attachments\", true);\n  useEffect(() => {\n    setErrors({});\n  }, [title]);\n\n  const onChangeFile = event => {\n    if (event.target.files.length < 1) {\n      return;\n    }\n\n    const file = event.target.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      setNewImage(fileReader.result);\n      uploadFile(file);\n    };\n\n    fileReader.readAsDataURL(file);\n  };\n\n  const uploadFile = async file => {\n    const attachment = new FormData();\n    attachment.append('image', file);\n    const response = await postActivityAttachment(attachment);\n    setAttachmentId(response.data.id);\n  };\n\n  const onClickEvent = async () => {\n    const body = {\n      title: title,\n      attachmentId: attachmentId\n    };\n\n    try {\n      await createActivity(body);\n      setFocused(false);\n    } catch (error) {\n      if (error.response.data.validationErrors) {\n        setErrors(error.response.data.validationErrors);\n      }\n    }\n  };\n\n  let textAreaClass = 'form-control';\n\n  if (errors.title) {\n    textAreaClass += ' is-invalid';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card p-1 flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileImageWithDefault, {\n    image: image,\n    width: \"32\",\n    height: \"32\",\n    className: \"rounded-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: textAreaClass,\n    rows: focused ? '3' : '1',\n    onFocus: () => setFocused(true),\n    onChange: event => setTitle(event.target.value),\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, errors.title), focused && /*#__PURE__*/React.createElement(React.Fragment, null, !newImage && /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    onChange: onChangeFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 39\n    }\n  }), newImage && /*#__PURE__*/React.createElement(AutoUploadImage, {\n    image: newImage,\n    uploading: pendingFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ButtonWithProgress, {\n    className: \"btn btn-primary\",\n    onClick: onClickEvent,\n    text: \"Activity\",\n    pendingApiCall: pendingApiCall,\n    disabled: pendingApiCall || pendingFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light d-inline-flex ml-1\",\n    onClick: () => setFocused(false),\n    disabled: pendingApiCall || pendingFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, \"close\"), t('Cancel'))))));\n};\n\nexport default ActivitySubmit;","map":{"version":3,"sources":["D:/JsProjects/Tehap_FrontEnd/Tehap_FrontEnd/src/components/ActivitySubmit.js"],"names":["React","useEffect","useState","useTranslation","useSelector","ProfileImageWithDefault","createActivity","postActivityAttachment","useApiProgress","ButtonWithProgress","Input","AutoUploadImage","ActivitySubmit","image","store","focused","setFocused","t","errors","setErrors","newImage","setNewImage","attachmentId","setAttachmentId","title","setTitle","description","setDescription","location","setLocation","startDate","setStartDate","Date","pendingApiCall","pendingFileUpload","onChangeFile","event","target","files","length","file","fileReader","FileReader","onloadend","result","uploadFile","readAsDataURL","attachment","FormData","append","response","data","id","onClickEvent","body","error","validationErrors","textAreaClass","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { createActivity, postActivityAttachment } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport Input from '../components/Input';\r\nimport AutoUploadImage from '../components/AutoUploadImage';\r\n\r\nconst ActivitySubmit = () => {\r\n    const { image } = useSelector((store) => ({ image: store.image }));\r\n    const [focused, setFocused] = useState(false);\r\n\r\n    const { t } = useTranslation();\r\n    const [errors, setErrors] = useState({});\r\n    const [newImage, setNewImage] = useState();\r\n    const [attachmentId, setAttachmentId] = useState();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        if (!focused) {\r\n            setTitle('');\r\n            setDescription('');\r\n            setLocation('');\r\n            setStartDate('');\r\n            setErrors({});\r\n            setNewImage();\r\n            setAttachmentId();\r\n        }\r\n    }, [focused]);\r\n\r\n    const pendingApiCall = useApiProgress('post', '/api/createActivity', true);\r\n    const pendingFileUpload = useApiProgress('post', \"/api/activity-attachments\", true);\r\n\r\n\r\n    useEffect(() => {\r\n        setErrors({})\r\n    }, [title]);\r\n\r\n    const onChangeFile = (event) => {\r\n        if (event.target.files.length < 1) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n            uploadFile(file);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    };\r\n\r\n    const uploadFile = async (file) => {\r\n        const attachment = new FormData();\r\n        attachment.append('image', file)\r\n        const response = await postActivityAttachment(attachment);\r\n        setAttachmentId(response.data.id);\r\n    }\r\n\r\n    const onClickEvent = async () => {\r\n        const body = {\r\n            title: title,\r\n            attachmentId: attachmentId\r\n        };\r\n\r\n        try {\r\n            await createActivity(body);\r\n            setFocused(false);\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                setErrors(error.response.data.validationErrors)\r\n            }\r\n        }\r\n    }\r\n\r\n    let textAreaClass = 'form-control';\r\n    if (errors.title) {\r\n        textAreaClass += ' is-invalid';\r\n    }\r\n    return (\r\n        <div className=\"card p-1 flex-row\">\r\n            <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle\" />\r\n            <div className=\"flex-fill\">\r\n                <textarea className={textAreaClass}\r\n                    rows={focused ? '3' : '1'}\r\n                    onFocus={() => setFocused(true)}\r\n                    onChange={(event) => setTitle(event.target.value)}\r\n                    value={title}\r\n                />\r\n                <div className=\"invalid-feedback\">{errors.title}</div>\r\n                {focused && (\r\n                    <>\r\n                        {!newImage && <Input type=\"file\" onChange={onChangeFile} />}\r\n                        {newImage && <AutoUploadImage image={newImage} uploading={pendingFileUpload} />}\r\n                        <div className=\"text-right mt-1\">\r\n\r\n\r\n                            <ButtonWithProgress className=\"btn btn-primary\"\r\n                                onClick={onClickEvent}\r\n                                text=\"Activity\"\r\n                                pendingApiCall={pendingApiCall}\r\n                                disabled={pendingApiCall || pendingFileUpload}\r\n                            />\r\n                            <button\r\n                                className=\"btn btn-light d-inline-flex ml-1\"\r\n                                onClick={() => setFocused(false)}\r\n                                disabled={pendingApiCall || pendingFileUpload}\r\n\r\n                            >\r\n                                <i className=\"material-icons\">close</i>\r\n                                {t('Cancel')}\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivitySubmit;"]},"metadata":{},"sourceType":"module"}