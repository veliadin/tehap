{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adinv\\\\FrontEnd Projects\\\\AppStater_v01\\\\src\\\\components\\\\ProfileCard.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst ProfileCard = props => {\n  const {} = useSelector(store => {\n    return {\n      username: store.username\n    };\n  });\n  const pathUsername = props.match.params.username;\n  let message = 'We cannot edit';\n\n  if (pathUsername === props.loggedInUsername) {\n    message = 'We can edit';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }, message);\n};\n\nconst mapStateToProps = store => {\n  return {\n    loggedInUsername: store.username\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(ProfileCard));","map":{"version":3,"sources":["C:/Users/adinv/FrontEnd Projects/AppStater_v01/src/components/ProfileCard.js"],"names":["React","withRouter","useSelector","ProfileCard","props","store","username","pathUsername","match","params","message","loggedInUsername","mapStateToProps","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAEzB,QAAM,KAAKF,WAAW,CAAEG,KAAD,IAAU;AAC7B,WAAM;AACFC,MAAAA,QAAQ,EAAGD,KAAK,CAACC;AADf,KAAN;AAGH,GAJqB,CAAtB;AAMA,QAAMC,YAAY,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBH,QAAxC;AACA,MAAII,OAAO,GAAG,gBAAd;;AACA,MAAIH,YAAY,KAAKH,KAAK,CAACO,gBAA3B,EAA6C;AACzCD,IAAAA,OAAO,GAAG,aAAV;AACH;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,OAAN,CAAP;AACH,CAdD;;AAgBA,MAAME,eAAe,GAAIP,KAAD,IAAW;AAC/B,SAAO;AACHM,IAAAA,gBAAgB,EAAEN,KAAK,CAACC;AADrB,GAAP;AAGH,CAJD;;AAMA,eAAeO,OAAO,CAACD,eAAD,CAAP,CAAyBX,UAAU,CAACE,WAAD,CAAnC,CAAf","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProfileCard = props => {\r\n\r\n    const {} = useSelector((store) =>{\r\n        return{\r\n            username : store.username\r\n        };\r\n    })\r\n\r\n    const pathUsername = props.match.params.username;\r\n    let message = 'We cannot edit';\r\n    if (pathUsername === props.loggedInUsername) {\r\n        message = 'We can edit';\r\n    }\r\n    return <div>{message}</div>;\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        loggedInUsername: store.username\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(ProfileCard));"]},"metadata":{},"sourceType":"module"}