{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adinv\\\\tehapfrontend\\\\src\\\\shared\\\\ApiProgress.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport function withApiProgress(WrappedComponent, apiPath) {\n  var _temp;\n\n  return _temp = class ApiProgress extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        pendingApiCall: false\n      };\n\n      this.updateApiCallFor = (url, inProgress) => {\n        if (url == apiPath) {\n          this.setState({\n            pendingApiCall: inProgress\n          });\n        }\n      };\n    }\n\n    componentDidMount() {\n      axios.interceptors.request.use(request => {\n        this.updateApiCallFor(request.url, true);\n        return request;\n      });\n      axios.interceptors.response.use(response => {\n        this.updateApiCallFor(response.config.url, false);\n        return response;\n      }, error => {\n        this.updateApiCallFor(error.config.url, false);\n        throw error;\n      });\n    }\n\n    render() {\n      const {\n        pendingApiCall\n      } = this.state;\n      return /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({\n        pendingApiCall: pendingApiCall\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      })); //return (div>{React.cloneElement(this.props.children, {pendingApiCall})}</div>);\n    }\n\n  }, _temp;\n}","map":{"version":3,"sources":["C:/Users/adinv/tehapfrontend/src/shared/ApiProgress.js"],"names":["React","Component","axios","withApiProgress","WrappedComponent","apiPath","ApiProgress","state","pendingApiCall","updateApiCallFor","url","inProgress","setState","componentDidMount","interceptors","request","use","response","config","error","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,eAAT,CAAyBC,gBAAzB,EAA2CC,OAA3C,EAAmD;AAAA;;AACtD,iBAAO,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,WAEvCM,KAFuC,GAE/B;AACJC,QAAAA,cAAc,EAAE;AADZ,OAF+B;;AAAA,WAqBvCC,gBArBuC,GAqBpB,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACpC,YAAID,GAAG,IAAIL,OAAX,EAAoB;AAChB,eAAKO,QAAL,CAAc;AAAEJ,YAAAA,cAAc,EAAEG;AAAlB,WAAd;AACH;AACJ,OAzBsC;AAAA;;AAMvCE,IAAAA,iBAAiB,GAAG;AAChBX,MAAAA,KAAK,CAACY,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCD,OAAD,IAAa;AACxC,aAAKN,gBAAL,CAAsBM,OAAO,CAACL,GAA9B,EAAmC,IAAnC;AACA,eAAOK,OAAP;AACH,OAHD;AAIAb,MAAAA,KAAK,CAACY,YAAN,CAAmBG,QAAnB,CAA4BD,GAA5B,CAAiCC,QAAD,IAAc;AAC1C,aAAKR,gBAAL,CAAsBQ,QAAQ,CAACC,MAAT,CAAgBR,GAAtC,EAA2C,KAA3C;AACA,eAAOO,QAAP;AACH,OAHD,EAIKE,KAAD,IAAW;AACP,aAAKV,gBAAL,CAAsBU,KAAK,CAACD,MAAN,CAAaR,GAAnC,EAAwC,KAAxC;AACA,cAAMS,KAAN;AACH,OAPL;AAQH;;AAQDC,IAAAA,MAAM,GAAG;AACL,YAAM;AAAEZ,QAAAA;AAAF,UAAqB,KAAKD,KAAhC;AACA,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,cAAc,EAAIC;AAApC,SAAwD,KAAKa,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP,CAFK,CAGL;AACH;;AA/BsC,GAA3C;AAiCH","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport function withApiProgress(WrappedComponent, apiPath){\r\n    return class ApiProgress extends Component {\r\n\r\n        state = {\r\n            pendingApiCall: false,\r\n    \r\n        };\r\n        componentDidMount() {\r\n            axios.interceptors.request.use((request) => {\r\n                this.updateApiCallFor(request.url, true);\r\n                return request;\r\n            });\r\n            axios.interceptors.response.use((response) => {\r\n                this.updateApiCallFor(response.config.url, false);\r\n                return response;\r\n            },\r\n                (error) => {\r\n                    this.updateApiCallFor(error.config.url, false);\r\n                    throw error;\r\n                });\r\n        }\r\n    \r\n        updateApiCallFor = (url, inProgress) => {\r\n            if (url == apiPath) {\r\n                this.setState({ pendingApiCall: inProgress });\r\n            }\r\n        }\r\n    \r\n        render() {\r\n            const { pendingApiCall } = this.state;\r\n            return <WrappedComponent pendingApiCall = {pendingApiCall} {...this.props}/>\r\n            //return (div>{React.cloneElement(this.props.children, {pendingApiCall})}</div>);\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}