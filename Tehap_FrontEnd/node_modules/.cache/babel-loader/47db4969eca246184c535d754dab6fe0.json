{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\src\\\\components\\\\ProfileCard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\nimport { useTranslation } from \"react-i18next\";\nimport Input from \"../components/Input\";\nimport { updateUser } from \"../api/apiCalls\";\nimport { useApiProgress } from \"../shared/ApiProgress\";\nimport ButtonWithProgress from '../components/ButtonWithProgress';\n\nconst ProfileCard = props => {\n  const {\n    username: loggedInUsername\n  } = useSelector(store => {\n    return {\n      username: store.username\n    };\n  });\n  const [inEditMode, setInEditMode] = useState(false);\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\n  const [user, setUser] = useState({});\n  const [editable, setEditable] = useState(false);\n  const [newImage, setNewImage] = useState();\n  const {\n    username,\n    displayName,\n    image\n  } = user;\n  const {\n    t\n  } = useTranslation(); //const { user } = props;\n\n  const routeParams = useParams();\n  const pathUsername = routeParams.username;\n  useEffect(() => {\n    setUser(props.user);\n  }, [props.user]);\n  useEffect(() => {\n    setEditable(pathUsername === loggedInUsername);\n  }, [pathUsername, loggedInUsername]);\n  useEffect(() => {\n    if (!inEditMode) {\n      setUpdatedDisplayName(undefined);\n      setNewImage(undefined);\n    } else {\n      setUpdatedDisplayName(displayName);\n    }\n  }, [inEditMode, displayName]);\n\n  const onClickEdit = async () => {\n    const body = {\n      displayName: updatedDisplayName,\n      image: newImage\n    };\n\n    try {\n      const response = await updateUser(username, body);\n      setInEditMode(false);\n      setUser(response.data);\n    } catch (error) {}\n  };\n\n  const onChangeFile = event => {\n    const file = event.target.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      setNewImage(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  };\n\n  const pendingApiCall = useApiProgress('put', '/api/users/' + username);\n  let message = \"We cannot edit\";\n\n  if (pathUsername === loggedInUsername) {\n    message = \"We can edit\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProfileImageWithDefault, {\n    className: \"rounded-circle shadow\",\n    width: \"150\",\n    height: \"160\",\n    alt: `${username} profile`,\n    image: image,\n    tempImage: newImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, !inEditMode && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, displayName, username), editable && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success  d-inline-flex\",\n    onClick: () => setInEditMode(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"edit\"), t('Edit'))), inEditMode && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: t('Change Display Name'),\n    defaultValue: displayName,\n    onChange: event => {\n      setUpdatedDisplayName(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onChangeFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonWithProgress, {\n    className: \"btn btn-primary d-inline-flex\",\n    onClick: onClickEdit,\n    disabled: pendingApiCall,\n    pendingApiCall: pendingApiCall,\n    text: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, \"save\"), t('Save')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light d-inline-flex ml-1\",\n    onClick: () => setInEditMode(false),\n    disabled: pendingApiCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"close\"), t('Cancel'))))));\n};\n\nexport default ProfileCard;","map":{"version":3,"sources":["D:/JsProjects/Tehap_FrontEnd/Tehap_FrontEnd/src/components/ProfileCard.js"],"names":["React","useEffect","useState","useParams","useSelector","ProfileImageWithDefault","useTranslation","Input","updateUser","useApiProgress","ButtonWithProgress","ProfileCard","props","username","loggedInUsername","store","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","user","setUser","editable","setEditable","newImage","setNewImage","displayName","image","t","routeParams","pathUsername","undefined","onClickEdit","body","response","data","error","onChangeFile","event","file","target","files","fileReader","FileReader","onloadend","result","readAsDataURL","pendingApiCall","message","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Input from \"../components/Input\";\r\nimport { updateUser } from \"../api/apiCalls\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\n\r\nconst ProfileCard = (props) => {\r\n  const { username: loggedInUsername } = useSelector((store) => {\r\n    return {\r\n      username: store.username,\r\n    };\r\n  });\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n  const [user, setUser] = useState({});\r\n  const [editable, setEditable] = useState(false);\r\n  const [newImage, setNewImage] = useState();\r\n\r\n  const { username, displayName, image } = user;\r\n  const { t } = useTranslation();\r\n  //const { user } = props;\r\n  const routeParams = useParams();\r\n  const pathUsername = routeParams.username;\r\n\r\n  useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    setEditable(pathUsername === loggedInUsername)\r\n  }, [pathUsername, loggedInUsername])\r\n\r\n  useEffect(() => {\r\n    if (!inEditMode) {\r\n      setUpdatedDisplayName(undefined);\r\n      setNewImage(undefined);\r\n    } else {\r\n      setUpdatedDisplayName(displayName);\r\n    }\r\n  }, [inEditMode, displayName]);\r\n\r\n\r\n  const onClickEdit = async () => {\r\n    const body = {\r\n      displayName: updatedDisplayName,\r\n      image: newImage\r\n    };\r\n    try {\r\n      const response = await updateUser(username, body);\r\n      setInEditMode(false);\r\n      setUser(response.data)\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  const onChangeFile = (event) => {\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n    }\r\n    fileReader.readAsDataURL(file);\r\n  }\r\n\r\n\r\n  const pendingApiCall = useApiProgress('put', '/api/users/' + username);\r\n\r\n\r\n  let message = \"We cannot edit\";\r\n  if (pathUsername === loggedInUsername) {\r\n    message = \"We can edit\";\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"150\"\r\n          height=\"160\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n          tempImage={newImage}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {(!inEditMode &&\r\n          <>\r\n            <h4>\r\n              {displayName}\r\n              {username}\r\n            </h4>\r\n\r\n            {editable && <button\r\n              className=\"btn btn-success  d-inline-flex\"\r\n              onClick={() => setInEditMode(true)}>\r\n              <span className=\"material-icons\">edit</span>\r\n              {t('Edit')}</button>}\r\n          </>\r\n        )}\r\n        {(inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t('Change Display Name')}\r\n              defaultValue={displayName}\r\n              onChange={(event) => {\r\n                setUpdatedDisplayName(event.target.value)\r\n              }} />\r\n            <input type=\"file\" onChange={onChangeFile} />\r\n            <div>\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary d-inline-flex\"\r\n                onClick={onClickEdit}\r\n                disabled={pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={\r\n                  <>\r\n                    <i className=\"material-icons\">save</i>\r\n                    {t('Save')}\r\n                  </>\r\n                }\r\n              />\r\n\r\n\r\n              <button\r\n                className=\"btn btn-light d-inline-flex ml-1\"\r\n                onClick={() => setInEditMode(false)}\r\n                disabled={pendingApiCall}>\r\n                <i className=\"material-icons\">close</i>\r\n                {t('Cancel')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n"]},"metadata":{},"sourceType":"module"}