{"ast":null,"code":"import _toConsumableArray from\"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{useEffect}from'react';import{useState}from'react';import{useTranslation}from'react-i18next';import{getActivities,getOldActivities,getNewActivityCount,getNewActivities}from'../api/apiCalls';import{useApiProgress}from'../shared/ApiProgress';import ActivityView from'./ActivityView';import Spinner from'../components/Spinner';import{useParams}from'react-router-dom';var Activities=function Activities(){var _useState=useState({content:[],last:true,number:0}),_useState2=_slicedToArray(_useState,2),activityPage=_useState2[0],setActivityPage=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),newActivityCount=_useState4[0],setNewActivityCount=_useState4[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useParams=useParams(),username=_useParams.username;var path=username?\"/api/users/\".concat(username,\"/activities?page=\"):\"/api/getActivities?page=\";var initialActivityLoadProgress=useApiProgress('get',path);var lastActivityId=0;var firstActivityId=0;if(activityPage.content.length>0){firstActivityId=activityPage.content[0].id;var lastActivityIndex=activityPage.content.length-1;lastActivityId=activityPage.content[lastActivityIndex].id;}var oldActivityPath=username?\"/api/users/\".concat(username,\"/activities/\").concat(lastActivityId):\"/api/getActivities/\".concat(lastActivityId);var loadOldActivitiesProgress=useApiProgress('get',oldActivityPath,true);var newActivitiesPath=username?\"/api/users/\".concat(username,\"/activities/\").concat(firstActivityId,\"?direction=after\"):\"/api/getActivities/\".concat(firstActivityId,\"?direction=after\");var loadNewActivitiesProgress=useApiProgress('get',newActivitiesPath,true);useEffect(function(){var getCount=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getNewActivityCount(firstActivityId,username);case 2:response=_context.sent;setNewActivityCount(response.data.count);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getCount(){return _ref.apply(this,arguments);};}();var looper=setInterval(getCount,1000);;return function cleanup(){clearInterval(looper);};},[firstActivityId,username]);useEffect(function(){var loadActivities=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(page){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return getActivities(username,page);case 3:response=_context2.sent;setActivityPage(function(previousActivityPage){return _objectSpread(_objectSpread({},response.data),{},{content:[].concat(_toConsumableArray(previousActivityPage.content),_toConsumableArray(response.data.content))});});_context2.next=9;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);case 9:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function loadActivities(_x){return _ref2.apply(this,arguments);};}();loadActivities();},[username]);var loadOldActivities=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return getOldActivities(lastActivityId,username);case 2:response=_context3.sent;setActivityPage(function(previousActivityPage){return _objectSpread(_objectSpread({},response.data),{},{content:[].concat(_toConsumableArray(previousActivityPage.content),_toConsumableArray(response.data.content))});});case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function loadOldActivities(){return _ref3.apply(this,arguments);};}();var loadNewActivities=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return getNewActivities(firstActivityId,username);case 2:response=_context4.sent;setActivityPage(function(previousActivityPage){return _objectSpread(_objectSpread({},previousActivityPage),{},{content:[].concat(_toConsumableArray(response.data),_toConsumableArray(previousActivityPage.content))});});setNewActivityCount(0);case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function loadNewActivities(){return _ref4.apply(this,arguments);};}();var onDeleteActivitySuccess=function onDeleteActivitySuccess(id){setActivityPage(function(previousActivityPage){return _objectSpread(_objectSpread({},previousActivityPage),{},{content:previousActivityPage.content.filter(function(activity){if(activity.id!==id){return true;}return false;})});});};var content=activityPage.content,last=activityPage.last;if(content.length===0){return/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-secondary text-center\"},initialActivityLoadProgress?/*#__PURE__*/React.createElement(Spinner,null):t('There are no activities'));}return/*#__PURE__*/React.createElement(\"div\",null,newActivityCount>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-secondary text-center\",style:{cursor:loadNewActivitiesProgress?'not-allowed':'pointer'},onClick:loadNewActivitiesProgress?function(){}:function(){return loadNewActivities();}},loadNewActivitiesProgress?/*#__PURE__*/React.createElement(Spinner,null):t('There are new activities')),content.map(function(activity){return/*#__PURE__*/React.createElement(ActivityView,{key:activity.id,activity:activity,onDeleteActivity:onDeleteActivitySuccess});}),!last&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-secondary text-center\",style:{cursor:loadOldActivitiesProgress?'not-allowed':'pointer'},onClick:loadOldActivitiesProgress?function(){}:function(){return loadOldActivities();}},loadOldActivitiesProgress?/*#__PURE__*/React.createElement(Spinner,null):t('Load new activities')));};export default Activities;","map":{"version":3,"sources":["D:/JsProjects/Tehap_FrontEnd/Tehap_FrontEnd/src/components/Activities.js"],"names":["React","useEffect","useState","useTranslation","getActivities","getOldActivities","getNewActivityCount","getNewActivities","useApiProgress","ActivityView","Spinner","useParams","Activities","content","last","number","activityPage","setActivityPage","newActivityCount","setNewActivityCount","t","username","path","initialActivityLoadProgress","lastActivityId","firstActivityId","length","id","lastActivityIndex","oldActivityPath","loadOldActivitiesProgress","newActivitiesPath","loadNewActivitiesProgress","getCount","response","data","count","looper","setInterval","cleanup","clearInterval","loadActivities","page","previousActivityPage","loadOldActivities","loadNewActivities","onDeleteActivitySuccess","filter","activity","cursor","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getActivities, getOldActivities, getNewActivityCount, getNewActivities } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ActivityView from './ActivityView';\r\nimport Spinner from '../components/Spinner';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Activities = () => {\r\n\r\n    const [activityPage, setActivityPage] = useState({ content: [], last: true, number: 0 });\r\n    const [newActivityCount, setNewActivityCount] = useState(0);\r\n    const { t } = useTranslation();\r\n    const { username } = useParams();\r\n\r\n\r\n    const path = username ? `/api/users/${username}/activities?page=` : `/api/getActivities?page=`;\r\n    const initialActivityLoadProgress = useApiProgress('get', path);\r\n\r\n    let lastActivityId = 0;\r\n    let firstActivityId = 0;\r\n    if (activityPage.content.length > 0) {\r\n        firstActivityId = activityPage.content[0].id;\r\n        const lastActivityIndex = activityPage.content.length - 1;\r\n        lastActivityId = activityPage.content[lastActivityIndex].id;\r\n\r\n    }\r\n    const oldActivityPath = username ? `/api/users/${username}/activities/${lastActivityId}` : `/api/getActivities/${lastActivityId}`;\r\n    const loadOldActivitiesProgress = useApiProgress('get', oldActivityPath, true)\r\n\r\n    const newActivitiesPath = username ? `/api/users/${username}/activities/${firstActivityId}?direction=after` : `/api/getActivities/${firstActivityId}?direction=after`\r\n\r\n    const loadNewActivitiesProgress = useApiProgress('get', newActivitiesPath, true)\r\n\r\n\r\n    useEffect(() => {\r\n        const getCount = async () => {\r\n            const response = await getNewActivityCount(firstActivityId, username);\r\n            setNewActivityCount(response.data.count);\r\n        }\r\n        let looper = setInterval(getCount, 1000);\r\n        ;\r\n        return function cleanup() {\r\n            clearInterval(looper);\r\n        }\r\n    }, [firstActivityId, username])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const loadActivities = async page => {\r\n            try {\r\n                const response = await getActivities(username, page);\r\n                setActivityPage(previousActivityPage => ({\r\n                    ...response.data,\r\n                    content: [...previousActivityPage.content, ...response.data.content]\r\n                }))\r\n            } catch (error) { }\r\n        };\r\n        loadActivities();\r\n    }, [username]);\r\n\r\n\r\n    const loadOldActivities = async () => {\r\n\r\n        const response = await getOldActivities(lastActivityId, username);\r\n        setActivityPage(previousActivityPage => ({\r\n            ...response.data,\r\n            content: [...previousActivityPage.content, ...response.data.content]\r\n        }))\r\n    }\r\n\r\n    const loadNewActivities = async () => {\r\n        const response = await getNewActivities(firstActivityId, username);\r\n        setActivityPage(previousActivityPage => ({\r\n            ...previousActivityPage,\r\n            content: [...response.data, ...previousActivityPage.content]\r\n        }));\r\n        setNewActivityCount(0);\r\n    }\r\n\r\n    const onDeleteActivitySuccess = (id) => {\r\n        setActivityPage(previousActivityPage => ({\r\n            ...previousActivityPage,\r\n            content: previousActivityPage.content.filter((activity) => {\r\n                if (activity.id !== id) {\r\n                    return true\r\n                }\r\n                return false;\r\n            })\r\n        }))\r\n    }\r\n\r\n    const { content, last } = activityPage;\r\n\r\n    if (content.length === 0) {\r\n        return <div className=\"alert alert-secondary text-center\">\r\n            {initialActivityLoadProgress ? <Spinner /> : t('There are no activities')}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {newActivityCount > 0 && (\r\n                <div className=\"alert alert-secondary text-center\"\r\n                    style={{ cursor: loadNewActivitiesProgress ? 'not-allowed' : 'pointer' }}\r\n                    onClick={loadNewActivitiesProgress ? () => { } : () => loadNewActivities()}\r\n                >\r\n                    {loadNewActivitiesProgress ? <Spinner /> : t('There are new activities')}\r\n                </div>\r\n            )}\r\n            {content.map(activity => {\r\n                return <ActivityView key={activity.id} activity={activity} onDeleteActivity={onDeleteActivitySuccess}></ActivityView>\r\n            })}\r\n            {!last &&\r\n                <div\r\n                    className=\"alert alert-secondary text-center\"\r\n                    style={{ cursor: loadOldActivitiesProgress ? 'not-allowed' : 'pointer' }}\r\n                    onClick={loadOldActivitiesProgress ? () => { } : () => loadOldActivities()}\r\n                >\r\n                    {loadOldActivitiesProgress ? <Spinner /> : t('Load new activities')}\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Activities;"]},"metadata":{},"sourceType":"module"}