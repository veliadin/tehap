{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\src\\\\components\\\\ProfileCard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\nimport { useTranslation } from \"react-i18next\";\nimport Input from \"../components/Input\";\nimport { updateUser } from \"../api/apiCalls\";\nimport { useApiProgress } from \"../shared/ApiProgress\";\nimport ButtonWithProgress from '../components/ButtonWithProgress';\n\nconst ProfileCard = props => {\n  const {\n    username: loggedInUsername\n  } = useSelector(store => {\n    return {\n      username: store.username\n    };\n  });\n  const [inEditMode, setInEditMode] = useState(false);\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\n  const [user, setUser] = useState({});\n  const {\n    username,\n    displayName,\n    image\n  } = user;\n  const {\n    t\n  } = useTranslation(); //const { user } = props;\n\n  const routeParams = useParams();\n  useEffect(() => {\n    setUser(props.user);\n  }, [props.user]);\n  useEffect(() => {\n    if (!inEditMode) {\n      setUpdatedDisplayName(undefined);\n    } else {\n      setUpdatedDisplayName(displayName);\n    }\n  }, [inEditMode, displayName]);\n\n  const onClickEdit = async () => {\n    const body = {\n      displayName: updatedDisplayName\n    };\n\n    try {\n      const response = await updateUser(username, body);\n      setInEditMode(false);\n      setUser(response.data);\n    } catch (error) {}\n  };\n\n  const pendingApiCall = useApiProgress('put', '/api/users/' + username);\n  const pathUsername = routeParams.username;\n  let message = \"We cannot edit\";\n\n  if (pathUsername === loggedInUsername) {\n    message = \"We can edit\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProfileImageWithDefault, {\n    className: \"rounded-circle shadow\",\n    width: \"150\",\n    height: \"160\",\n    alt: `${username} profile`,\n    image: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, !inEditMode && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, displayName, username), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success  d-inline-flex\",\n    onClick: () => setInEditMode(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 98\n    }\n  }, \"create\"), t('Edit'))), inEditMode && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: t('Change Display Name'),\n    defaultValue: displayName,\n    onChange: event => {\n      setUpdatedDisplayName(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonWithProgress, {\n    className: \"btn btn-primary d-inline-flex\",\n    onClick: onClickEdit,\n    disabled: pendingApiCall,\n    pendingApiCall: pendingApiCall,\n    text: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"save\"), t('Save')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => setInEditMode(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"close\"), t('Cancel'))))));\n};\n\nexport default ProfileCard;","map":{"version":3,"sources":["D:/JsProjects/Tehap_FrontEnd/Tehap_FrontEnd/src/components/ProfileCard.js"],"names":["React","useEffect","useState","useParams","useSelector","ProfileImageWithDefault","useTranslation","Input","updateUser","useApiProgress","ButtonWithProgress","ProfileCard","props","username","loggedInUsername","store","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","user","setUser","displayName","image","t","routeParams","undefined","onClickEdit","body","response","data","error","pendingApiCall","pathUsername","message","event","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Input from \"../components/Input\";\r\nimport { updateUser } from \"../api/apiCalls\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\n\r\nconst ProfileCard = (props) => {\r\n  const { username: loggedInUsername } = useSelector((store) => {\r\n    return {\r\n      username: store.username,\r\n    };\r\n  });\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n  const [user, setUser] = useState({});\r\n\r\n  const { username, displayName, image } = user;\r\n  const { t } = useTranslation();\r\n  //const { user } = props;\r\n  const routeParams = useParams();\r\n\r\n\r\n  useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    if (!inEditMode) {\r\n      setUpdatedDisplayName(undefined);\r\n    } else {\r\n      setUpdatedDisplayName(displayName);\r\n    }\r\n  }, [inEditMode, displayName]);\r\n\r\n\r\n  const onClickEdit = async () => {\r\n    const body = {\r\n      displayName: updatedDisplayName\r\n    };\r\n    try {\r\n      const response = await updateUser(username, body);\r\n      setInEditMode(false);\r\n      setUser(response.data)\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  const pendingApiCall = useApiProgress('put', '/api/users/' + username);\r\n\r\n\r\n  const pathUsername = routeParams.username;\r\n  let message = \"We cannot edit\";\r\n  if (pathUsername === loggedInUsername) {\r\n    message = \"We can edit\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"150\"\r\n          height=\"160\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {(!inEditMode && <>\r\n          <h4>\r\n            {displayName}\r\n            {username}\r\n          </h4>\r\n\r\n          <button className=\"btn btn-success  d-inline-flex\" onClick={() => setInEditMode(true)}><span className=\"material-icons\">create</span>\r\n            {t('Edit')}</button></>\r\n        )}\r\n        {(inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t('Change Display Name')}\r\n              defaultValue={displayName}\r\n              onChange={(event) => {\r\n                setUpdatedDisplayName(event.target.value)\r\n              }} />\r\n            <div>\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary d-inline-flex\"\r\n                onClick={onClickEdit}\r\n                disabled={pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={\r\n                  <>\r\n                    <i className=\"material-icons\">save</i>\r\n                    {t('Save')}\r\n                  </>\r\n                }\r\n              />\r\n\r\n\r\n              <button\r\n                className=\"btn\"\r\n                onClick={() => setInEditMode(false)}>\r\n                <i className=\"material-icons\">close</i>\r\n                {t('Cancel')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n"]},"metadata":{},"sourceType":"module"}