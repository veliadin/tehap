{"ast":null,"code":"import _slicedToArray from\"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import axios from'axios';export var useApiProgress=function useApiProgress(apiMethod,apiPath,strictPath){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingApiCall=_useState2[0],setPendingApiCall=_useState2[1];useEffect(function(){var requestInterceptor,responseInterceptor;var updateApiCallFor=function updateApiCallFor(method,url,inProgress){if(method!==apiMethod){return;}if(strictPath&&url===apiPath){setPendingApiCall(inProgress);}else if(!strictPath&&url.startsWith(apiPath)){setPendingApiCall(inProgress);}};var registerInterceptors=function registerInterceptors(){requestInterceptor=axios.interceptors.request.use(function(request){var url=request.url,method=request.method;updateApiCallFor(method,url,true);return request;});responseInterceptor=axios.interceptors.response.use(function(response){var _response$config=response.config,url=_response$config.url,method=_response$config.method;updateApiCallFor(method,url,false);return response;},function(error){var _error$config=error.config,url=_error$config.url,method=_error$config.method;updateApiCallFor(method,url,false);throw error;});};var unRegisterInterceptor=function unRegisterInterceptor(){axios.interceptors.request.eject(requestInterceptor);axios.interceptors.response.eject(responseInterceptor);};registerInterceptors();return function unmount(){unRegisterInterceptor();};},[apiPath,apiMethod,strictPath]);return pendingApiCall;};","map":{"version":3,"sources":["D:/JsProjects/Tehap_FrontEnd/Tehap_FrontEnd/src/shared/ApiProgress.js"],"names":["useState","useEffect","axios","useApiProgress","apiMethod","apiPath","strictPath","pendingApiCall","setPendingApiCall","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","registerInterceptors","interceptors","request","use","response","config","error","unRegisterInterceptor","eject","unmount"],"mappings":"0KAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,SAAD,CAAYC,OAAZ,CAAqBC,UAArB,CAAoC,eAClBN,QAAQ,CAAC,KAAD,CADU,wCACvDO,cADuD,eACvCC,iBADuC,eAG9DP,SAAS,CAAC,UAAM,CACZ,GAAIQ,CAAAA,kBAAJ,CAAwBC,mBAAxB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,MAAD,CAASC,GAAT,CAAcC,UAAd,CAA6B,CAClD,GAAIF,MAAM,GAAKR,SAAf,CAA0B,CACtB,OACH,CACD,GAAIE,UAAU,EAAIO,GAAG,GAAKR,OAA1B,CAAmC,CAC/BG,iBAAiB,CAACM,UAAD,CAAjB,CACH,CAFD,IAGK,IAAI,CAACR,UAAD,EAAeO,GAAG,CAACE,UAAJ,CAAeV,OAAf,CAAnB,CAA4C,CAC7CG,iBAAiB,CAACM,UAAD,CAAjB,CACH,CACJ,CAVD,CAYA,GAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CAC/BP,kBAAkB,CAAGP,KAAK,CAACe,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,SAACD,OAAD,CAAa,IACrDL,CAAAA,GADqD,CACrCK,OADqC,CACrDL,GADqD,CAChDD,MADgD,CACrCM,OADqC,CAChDN,MADgD,CAE7DD,gBAAgB,CAACC,MAAD,CAASC,GAAT,CAAc,IAAd,CAAhB,CACA,MAAOK,CAAAA,OAAP,CACH,CAJoB,CAArB,CAKAR,mBAAmB,CAAGR,KAAK,CAACe,YAAN,CAAmBG,QAAnB,CAA4BD,GAA5B,CAAgC,SAACC,QAAD,CAAc,sBACxCA,QAAQ,CAACC,MAD+B,CACxDR,GADwD,kBACxDA,GADwD,CACnDD,MADmD,kBACnDA,MADmD,CAEhED,gBAAgB,CAACC,MAAD,CAASC,GAAT,CAAc,KAAd,CAAhB,CACA,MAAOO,CAAAA,QAAP,CACH,CAJqB,CAKlB,SAACE,KAAD,CAAW,mBACiBA,KAAK,CAACD,MADvB,CACCR,GADD,eACCA,GADD,CACMD,MADN,eACMA,MADN,CAEPD,gBAAgB,CAACC,MAAD,CAASC,GAAT,CAAc,KAAd,CAAhB,CACA,KAAMS,CAAAA,KAAN,CACH,CATiB,CAAtB,CAUH,CAhBD,CAkBA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAChCrB,KAAK,CAACe,YAAN,CAAmBC,OAAnB,CAA2BM,KAA3B,CAAiCf,kBAAjC,EACAP,KAAK,CAACe,YAAN,CAAmBG,QAAnB,CAA4BI,KAA5B,CAAkCd,mBAAlC,EACH,CAHD,CAMAM,oBAAoB,GAEpB,MAAO,SAASS,CAAAA,OAAT,EAAmB,CACtBF,qBAAqB,GACxB,CAFD,CAIH,CA7CQ,CA6CN,CAAClB,OAAD,CAAUD,SAAV,CAAqBE,UAArB,CA7CM,CAAT,CA8CA,MAAOC,CAAAA,cAAP,CACH,CAlDM","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\r\n    const [pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let requestInterceptor, responseInterceptor;\r\n\r\n        const updateApiCallFor = (method, url, inProgress) => {\r\n            if (method !== apiMethod) {\r\n                return;\r\n            }\r\n            if (strictPath && url === apiPath) {\r\n                setPendingApiCall(inProgress);\r\n            }\r\n            else if (!strictPath && url.startsWith(apiPath)) {\r\n                setPendingApiCall(inProgress);\r\n            }\r\n        };\r\n\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                const { url, method } = request;\r\n                updateApiCallFor(method, url, true);\r\n                return request;\r\n            });\r\n            responseInterceptor = axios.interceptors.response.use((response) => {\r\n                const { url, method } = response.config;\r\n                updateApiCallFor(method, url, false);\r\n                return response;\r\n            },\r\n                (error) => {\r\n                    const { url, method } = error.config;\r\n                    updateApiCallFor(method, url, false);\r\n                    throw error;\r\n                });\r\n        };\r\n\r\n        const unRegisterInterceptor = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);\r\n        }\r\n\r\n\r\n        registerInterceptors();\r\n\r\n        return function unmount() {\r\n            unRegisterInterceptor();\r\n        }\r\n\r\n    }, [apiPath, apiMethod, strictPath])\r\n    return pendingApiCall;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}