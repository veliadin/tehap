{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\src\\\\components\\\\Activities.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getActivities } from '../api/apiCalls';\nimport { useApiProgress } from '../shared/ApiProgress';\nimport ActivityView from './ActivityView';\nimport Spinner from '../components/Spinner';\n\nconst Activities = () => {\n  const [activityPage, setActivityPage] = useState({\n    content: [],\n    last: true,\n    number: 0\n  });\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    loadActivities();\n  }, []);\n  const pendingApiCall = useApiProgress('get', '/api/getActivities?page');\n\n  const loadActivities = async page => {\n    try {\n      const response = await getActivities(page);\n      setActivityPage(previousActivityPage => ({ ...response.data,\n        content: [...previousActivityPage.content, ...response.data.content]\n      }));\n    } catch (error) {}\n  };\n\n  const {\n    content,\n    last,\n    number\n  } = activityPage;\n\n  if (content.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-secondary text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    }, t('There are no activities'));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, content.map(activity => {\n    return /*#__PURE__*/React.createElement(ActivityView, {\n      key: activity.id,\n      activity: activity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }\n    });\n  }), !last && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-secondary text-center\",\n    onClick: () => loadActivities(number + 1),\n    style: {\n      cursor: pendingApiCall ? 'not-allowed' : 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }, pendingApiCall ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 35\n    }\n  }) : t('Load new activities')));\n};\n\nexport default Activities;","map":{"version":3,"sources":["D:/JsProjects/Tehap_FrontEnd/Tehap_FrontEnd/src/components/Activities.js"],"names":["React","useEffect","useState","useTranslation","getActivities","useApiProgress","ActivityView","Spinner","Activities","activityPage","setActivityPage","content","last","number","t","loadActivities","pendingApiCall","page","response","previousActivityPage","data","error","length","map","activity","id","cursor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC;AAAES,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,IAAI,EAAE,IAArB;AAA2BC,IAAAA,MAAM,EAAE;AAAnC,GAAD,CAAhD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMC,cAAc,GAAGX,cAAc,CAAC,KAAD,EAAQ,yBAAR,CAArC;;AAEA,QAAMU,cAAc,GAAG,MAAOE,IAAP,IAAgB;AACnC,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMd,aAAa,CAACa,IAAD,CAApC;AACAP,MAAAA,eAAe,CAACS,oBAAoB,KAAK,EACrC,GAAGD,QAAQ,CAACE,IADyB;AAErCT,QAAAA,OAAO,EAAE,CAAC,GAAGQ,oBAAoB,CAACR,OAAzB,EAAkC,GAAGO,QAAQ,CAACE,IAAT,CAAcT,OAAnD;AAF4B,OAAL,CAArB,CAAf;AAIH,KAND,CAME,OAAOU,KAAP,EAAc,CAAG;AACtB,GARD;;AAUA,QAAM;AAAEV,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA4BJ,YAAlC;;AAEA,MAAIE,OAAO,CAACW,MAAR,KAAmB,CAAvB,EAA0B;AACtB,wBAAO;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACFR,CAAC,CAAC,yBAAD,CADC,CAAP;AAGH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,OAAO,CAACY,GAAR,CAAYC,QAAQ,IAAI;AACrB,wBAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAA5B;AAAgC,MAAA,QAAQ,EAAED,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CADL,EAIK,CAACZ,IAAD,iBAAS;AAAK,IAAA,SAAS,EAAC,mCAAf;AACN,IAAA,OAAO,EAAE,MAAMG,cAAc,CAACF,MAAM,GAAG,CAAV,CADvB;AAEN,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAEV,cAAc,GAAG,aAAH,GAAmB;AAA3C,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAILA,cAAc,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiBF,CAAC,CAAC,qBAAD,CAJ3B,CAJd,CADJ;AAaH,CAzCD;;AA2CA,eAAeN,UAAf","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getActivities } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ActivityView from './ActivityView';\r\nimport Spinner from '../components/Spinner';\r\n\r\nconst Activities = () => {\r\n    const [activityPage, setActivityPage] = useState({ content: [], last: true, number: 0 });\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        loadActivities();\r\n    }, []);\r\n\r\n    const pendingApiCall = useApiProgress('get', '/api/getActivities?page');\r\n\r\n    const loadActivities = async (page) => {\r\n        try {\r\n            const response = await getActivities(page);\r\n            setActivityPage(previousActivityPage => ({\r\n                ...response.data,\r\n                content: [...previousActivityPage.content, ...response.data.content]\r\n            }))\r\n        } catch (error) { }\r\n    };\r\n\r\n    const { content, last, number } = activityPage;\r\n\r\n    if (content.length === 0) {\r\n        return <div className=\"alert alert-secondary text-center\">\r\n            {t('There are no activities')}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {content.map(activity => {\r\n                return <ActivityView key={activity.id} activity={activity}></ActivityView>\r\n            })}\r\n            {!last && <div className=\"alert alert-secondary text-center\"\r\n                onClick={() => loadActivities(number + 1)}\r\n                style={{ cursor: pendingApiCall ? 'not-allowed' : 'pointer' }}\r\n            >\r\n                {pendingApiCall ? <Spinner /> : t('Load new activities')}\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Activities;"]},"metadata":{},"sourceType":"module"}