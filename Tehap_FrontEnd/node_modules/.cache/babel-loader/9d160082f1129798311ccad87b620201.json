{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport authReducer from './authReducer';\nimport SecureLS from 'secure-ls';\nimport thunk from 'redux-thunk';\nconst secureLs = new SecureLS();\n\nconst getStateFromStorage = () => {\n  const appAuth = secureLs.get('app-auth');\n  let stateInLocalStorage = {\n    isLoggedIn: false,\n    username: undefined,\n    displayName: undefined,\n    image: undefined,\n    password: undefined\n  };\n\n  if (appAuth) {\n    return stateInLocalStorage = appAuth;\n  }\n\n  return stateInLocalStorage;\n};\n\nconst updateStateInStorage = newState => {\n  secureLs.set('app-auth', newState);\n};\n\nconst configureStore = () => {\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  const store = createStore(authReducer, getStateFromStorage(), applyMiddleware(thunk));\n  store.subscribe(() => {\n    //store'da her hangi bir değişimde arkadak çalışacak\n    updateStateInStorage(store.getState());\n  });\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/adinv/tehapfrontend/src/redux/configureStore.js"],"names":["createStore","applyMiddleware","authReducer","SecureLS","thunk","secureLs","getStateFromStorage","appAuth","get","stateInLocalStorage","isLoggedIn","username","undefined","displayName","image","password","updateStateInStorage","newState","set","configureStore","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,EAAjB;;AAEA,MAAMG,mBAAmB,GAAG,MAAM;AAC9B,QAAMC,OAAO,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAAb,CAAhB;AAEA,MAAIC,mBAAmB,GAAG;AACtBC,IAAAA,UAAU,EAAE,KADU;AAEtBC,IAAAA,QAAQ,EAAEC,SAFY;AAGtBC,IAAAA,WAAW,EAAED,SAHS;AAItBE,IAAAA,KAAK,EAAEF,SAJe;AAKtBG,IAAAA,QAAQ,EAAEH;AALY,GAA1B;;AAQA,MAAIL,OAAJ,EAAa;AACT,WAAOE,mBAAmB,GAAGF,OAA7B;AACH;;AACD,SAAOE,mBAAP;AACH,CAfD;;AAiBA,MAAMO,oBAAoB,GAAGC,QAAQ,IAAI;AACrCZ,EAAAA,QAAQ,CAACa,GAAT,CAAa,UAAb,EAAyBD,QAAzB;AAEH,CAHD;;AAKA,MAAME,cAAc,GAAG,MAAM;AACzB;AACA,QAAMC,KAAK,GAAGpB,WAAW,CAACE,WAAD,EAAcI,mBAAmB,EAAjC,EAAqCL,eAAe,CAACG,KAAD,CAApD,CAAzB;AAEAgB,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AAAC;AACnBL,IAAAA,oBAAoB,CAACI,KAAK,CAACE,QAAN,EAAD,CAApB;AACH,GAFD;AAIA,SAAOF,KAAP;AACH,CATD;;AAWA,eAAeD,cAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n    const appAuth = secureLs.get('app-auth');\r\n\r\n    let stateInLocalStorage = {\r\n        isLoggedIn: false,\r\n        username: undefined,\r\n        displayName: undefined,\r\n        image: undefined,\r\n        password: undefined\r\n    }\r\n\r\n    if (appAuth) {\r\n        return stateInLocalStorage = appAuth;\r\n    }\r\n    return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = newState => {\r\n    secureLs.set('app-auth', newState);\r\n\r\n};\r\n\r\nconst configureStore = () => {\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    const store = createStore(authReducer, getStateFromStorage(), applyMiddleware(thunk));\r\n\r\n    store.subscribe(() => {//store'da her hangi bir değişimde arkadak çalışacak\r\n        updateStateInStorage(store.getState());\r\n    });\r\n\r\n    return store;\r\n}\r\n\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}