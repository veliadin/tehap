{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\src\\\\components\\\\ActivitySubmit.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\nimport { createActivity } from '../api/apiCalls';\nimport { useApiProgress } from '../shared/ApiProgress';\nimport ButtonWithProgress from '../components/ButtonWithProgress';\nimport Input from '../components/Input';\n\nconst ActivitySubmit = () => {\n  const {\n    image\n  } = useSelector(store => ({\n    image: store.image\n  }));\n  const [focused, setFocused] = useState(false);\n  const [activity, setActivity] = useState('');\n  const {\n    t\n  } = useTranslation();\n  const [errors, setErrors] = useState({});\n  const [newImage, setNewImage] = useState();\n  useEffect(() => {\n    if (!focused) {\n      setActivity('');\n      setErrors({});\n      setNewImage();\n    }\n  }, [focused]);\n  const pendingApiCall = useApiProgress('post', '/api/createActivity');\n  useEffect(() => {\n    setErrors({});\n  }, [activity]);\n\n  const onChangeFile = event => {\n    if (event.target.files.length < 1) {\n      return;\n    }\n\n    const file = event.target.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      setNewImage(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  };\n\n  const onClickEvent = async () => {\n    const body = {\n      title: activity\n    };\n\n    try {\n      await createActivity(body);\n      setFocused(false);\n    } catch (error) {\n      if (error.response.data.validationErrors) {\n        setErrors(error.response.data.validationErrors);\n      }\n    }\n  };\n\n  let textAreaClass = 'form-control';\n\n  if (errors.title) {\n    textAreaClass += ' is-invalid';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card p-1 flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileImageWithDefault, {\n    image: image,\n    width: \"32\",\n    height: \"32\",\n    className: \"rounded-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: textAreaClass,\n    rows: focused ? '3' : '1',\n    onFocus: () => setFocused(true),\n    onChange: event => setActivity(event.target.value),\n    value: activity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, errors.title), focused && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    onChange: onChangeFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), newImage && /*#__PURE__*/React.createElement(\"img\", {\n    src: newImage,\n    alt: \"activityImg\",\n    className: \"img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ButtonWithProgress, {\n    className: \"btn btn-primary\",\n    onClick: onClickEvent,\n    text: \"Activity\",\n    pendingApiCall: pendingApiCall,\n    disabled: pendingApiCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light d-inline-flex ml-1\",\n    onClick: () => setFocused(false),\n    disabled: pendingApiCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, \"close\"), t('Cancel'))))));\n};\n\nexport default ActivitySubmit;","map":{"version":3,"sources":["D:/JsProjects/Tehap_FrontEnd/Tehap_FrontEnd/src/components/ActivitySubmit.js"],"names":["React","useEffect","useState","useTranslation","useSelector","ProfileImageWithDefault","createActivity","useApiProgress","ButtonWithProgress","Input","ActivitySubmit","image","store","focused","setFocused","activity","setActivity","t","errors","setErrors","newImage","setNewImage","pendingApiCall","onChangeFile","event","target","files","length","file","fileReader","FileReader","onloadend","result","readAsDataURL","onClickEvent","body","title","error","response","data","validationErrors","textAreaClass","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { createActivity } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport Input from '../components/Input';\r\n\r\n\r\nconst ActivitySubmit = () => {\r\n    const { image } = useSelector((store) => ({ image: store.image }));\r\n    const [focused, setFocused] = useState(false);\r\n    const [activity, setActivity] = useState('')\r\n    const { t } = useTranslation();\r\n    const [errors, setErrors] = useState({});\r\n    const [newImage, setNewImage] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!focused) {\r\n            setActivity('')\r\n            setErrors({})\r\n            setNewImage();\r\n        }\r\n    }, [focused]);\r\n\r\n    const pendingApiCall = useApiProgress('post', '/api/createActivity');\r\n\r\n    useEffect(() => {\r\n        setErrors({})\r\n    }, [activity]);\r\n\r\n    const onChangeFile = (event) => {\r\n        if (event.target.files.length < 1) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }\r\n\r\n    const onClickEvent = async () => {\r\n        const body = {\r\n            title: activity\r\n        };\r\n\r\n        try {\r\n            await createActivity(body);\r\n            setFocused(false);\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                setErrors(error.response.data.validationErrors)\r\n            }\r\n        }\r\n    }\r\n\r\n    let textAreaClass = 'form-control';\r\n    if (errors.title) {\r\n        textAreaClass += ' is-invalid';\r\n    }\r\n    return (\r\n        <div className=\"card p-1 flex-row\">\r\n            <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle\" />\r\n            <div className=\"flex-fill\">\r\n                <textarea className={textAreaClass}\r\n                    rows={focused ? '3' : '1'}\r\n                    onFocus={() => setFocused(true)}\r\n                    onChange={(event) => setActivity(event.target.value)}\r\n                    value={activity}\r\n                />\r\n                <div className=\"invalid-feedback\">{errors.title}</div>\r\n                {focused && (\r\n                    <>\r\n                        <Input type=\"file\" onChange={onChangeFile} />\r\n                        {newImage && <img src={newImage} alt=\"activityImg\" className=\"img-thumbnail\" />}\r\n                        <div className=\"text-right mt-1\">\r\n                            <ButtonWithProgress className=\"btn btn-primary\"\r\n                                onClick={onClickEvent}\r\n                                text=\"Activity\"\r\n                                pendingApiCall={pendingApiCall}\r\n                                disabled={pendingApiCall}\r\n                            />\r\n                            <button\r\n                                className=\"btn btn-light d-inline-flex ml-1\"\r\n                                onClick={() => setFocused(false)}\r\n                                disabled={pendingApiCall}\r\n\r\n                            >\r\n                                <i className=\"material-icons\">close</i>\r\n                                {t('Cancel')}\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivitySubmit;"]},"metadata":{},"sourceType":"module"}