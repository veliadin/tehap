{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsProjects\\\\Tehap_FrontEnd\\\\Tehap_FrontEnd\\\\src\\\\components\\\\ProfileCard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\nimport { useTranslation } from \"react-i18next\";\nimport Input from \"../components/Input\";\nimport { updateUser } from \"../api/apiCalls\";\nimport { useApiProgress } from \"../shared/ApiProgress\";\nimport ButtonWithProgress from '../components/ButtonWithProgress';\n\nconst ProfileCard = props => {\n  const {\n    username: loggedInUsername\n  } = useSelector(store => {\n    return {\n      username: store.username\n    };\n  });\n  const [inEditMode, setInEditMode] = useState(false);\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\n  const [user, setUser] = useState({});\n  const [editable, setEditable] = useState(false);\n  const [newImage, setNewImage] = useState();\n  const {\n    username,\n    displayName,\n    image\n  } = user;\n  const {\n    t\n  } = useTranslation(); //const { user } = props;\n\n  const routeParams = useParams();\n  const pathUsername = routeParams.username;\n  useEffect(() => {\n    setUser(props.user);\n  }, [props.user]);\n  useEffect(() => {\n    setEditable(pathUsername === loggedInUsername);\n  }, [pathUsername, loggedInUsername]);\n  useEffect(() => {\n    if (!inEditMode) {\n      setUpdatedDisplayName(undefined);\n      setNewImage(undefined);\n    } else {\n      setUpdatedDisplayName(displayName);\n    }\n  }, [inEditMode, displayName]);\n\n  const onClickEdit = async () => {\n    let image;\n\n    if (newImage) {\n      image = newImage.split(',')[1];\n    }\n\n    const body = {\n      displayName: updatedDisplayName,\n      image\n    };\n\n    try {\n      const response = await updateUser(username, body);\n      setInEditMode(false);\n      setUser(response.data);\n    } catch (error) {}\n  };\n\n  const onChangeFile = event => {\n    if (event.target.files.length < 1) {\n      return;\n    }\n\n    const file = event.target.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onloadend = () => {\n      setNewImage(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  };\n\n  const pendingApiCall = useApiProgress('put', '/api/users/' + username);\n  let message = \"We cannot edit\";\n\n  if (pathUsername === loggedInUsername) {\n    message = \"We can edit\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"main-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gutters-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column align-items-center text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileImageWithDefault, {\n    className: \"rounded-circle shadow\",\n    width: \"150\",\n    height: \"160\",\n    alt: `${username} profile`,\n    image: image,\n    temimage: newImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, username), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"text-secondary mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Bilgisayar M\\xFChendisli\\u011Fi\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 79\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Follow\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-outline-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Message\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item d-flex justify-content-between align-items-center flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })))))))\n  /*\r\n  <div className=\"card text-center\">\r\n    <div className=\"card-header\">\r\n      <ProfileImageWithDefault\r\n        className=\"rounded-circle shadow\"\r\n        width=\"150\"\r\n        height=\"160\"\r\n        alt={`${username} profile`}\r\n        image={image}\r\n        temimage={newImage}\r\n      />\r\n    </div>\r\n    <div className=\"card-body\">\r\n      {(!inEditMode &&\r\n        <>\r\n          <h4>\r\n            {displayName}\r\n            {username}\r\n          </h4>\r\n            {editable && <button\r\n            className=\"btn btn-success  d-inline-flex\"\r\n            onClick={() => setInEditMode(true)}>\r\n            <span className=\"material-icons\">edit</span>\r\n            {t('Edit')}</button>}\r\n        </>\r\n      )}\r\n      {(inEditMode && (\r\n        <div>\r\n          <Input\r\n            label={t('Change Display Name')}\r\n            defaultValue={displayName}\r\n            onChange={(event) => {\r\n              setUpdatedDisplayName(event.target.value)\r\n            }} />\r\n          <input type=\"file\" onChange={onChangeFile} />\r\n          <div>\r\n            <ButtonWithProgress\r\n              className=\"btn btn-primary d-inline-flex\"\r\n              onClick={onClickEdit}\r\n              disabled={pendingApiCall}\r\n              pendingApiCall={pendingApiCall}\r\n              text={\r\n                <>\r\n                  <i className=\"material-icons\">save</i>\r\n                  {t('Save')}\r\n                </>\r\n              }\r\n            />\r\n                <button\r\n              className=\"btn btn-light d-inline-flex ml-1\"\r\n              onClick={() => setInEditMode(false)}\r\n              disabled={pendingApiCall}>\r\n              <i className=\"material-icons\">close</i>\r\n              {t('Cancel')}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n        </div>\r\n    </div>*/\n  ;\n};\n\nexport default ProfileCard;","map":{"version":3,"sources":["D:/JsProjects/Tehap_FrontEnd/Tehap_FrontEnd/src/components/ProfileCard.js"],"names":["React","useEffect","useState","useParams","useSelector","ProfileImageWithDefault","useTranslation","Input","updateUser","useApiProgress","ButtonWithProgress","ProfileCard","props","username","loggedInUsername","store","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","user","setUser","editable","setEditable","newImage","setNewImage","displayName","image","t","routeParams","pathUsername","undefined","onClickEdit","split","body","response","data","error","onChangeFile","event","target","files","length","file","fileReader","FileReader","onloadend","result","readAsDataURL","pendingApiCall","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Input from \"../components/Input\";\r\nimport { updateUser } from \"../api/apiCalls\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\n\r\nconst ProfileCard = (props) => {\r\n  const { username: loggedInUsername } = useSelector((store) => {\r\n    return {\r\n      username: store.username,\r\n    };\r\n  });\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n  const [user, setUser] = useState({});\r\n  const [editable, setEditable] = useState(false);\r\n  const [newImage, setNewImage] = useState();\r\n\r\n  const { username, displayName, image } = user;\r\n  const { t } = useTranslation();\r\n  //const { user } = props;\r\n  const routeParams = useParams();\r\n  const pathUsername = routeParams.username;\r\n\r\n  useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    setEditable(pathUsername === loggedInUsername)\r\n  }, [pathUsername, loggedInUsername])\r\n\r\n  useEffect(() => {\r\n    if (!inEditMode) {\r\n      setUpdatedDisplayName(undefined);\r\n      setNewImage(undefined);\r\n    } else {\r\n      setUpdatedDisplayName(displayName);\r\n    }\r\n  }, [inEditMode, displayName]);\r\n\r\n\r\n  const onClickEdit = async () => {\r\n    let image;\r\n    if (newImage) {\r\n      image = newImage.split(',')[1];\r\n    }\r\n    const body = {\r\n      displayName: updatedDisplayName,\r\n      image\r\n    };\r\n    try {\r\n      const response = await updateUser(username, body);\r\n      setInEditMode(false);\r\n      setUser(response.data)\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  const onChangeFile = (event) => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n    }\r\n    fileReader.readAsDataURL(file);\r\n  }\r\n\r\n\r\n  const pendingApiCall = useApiProgress('put', '/api/users/' + username);\r\n\r\n\r\n  let message = \"We cannot edit\";\r\n  if (pathUsername === loggedInUsername) {\r\n    message = \"We can edit\";\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div class=\"main-body\">\r\n        <div className=\"row gutters-sm\">\r\n          <div className=\"col-md-4 mb-3\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex flex-column align-items-center text-center\">\r\n                  <ProfileImageWithDefault\r\n                    className=\"rounded-circle shadow\"\r\n                    width=\"150\"\r\n                    height=\"160\"\r\n                    alt={`${username} profile`}\r\n                    image={image}\r\n                    temimage={newImage}\r\n                  />\r\n                  <div className=\"mt-3\">\r\n                    <h4>{username}</h4>\r\n                    <p class=\"text-secondary mb-1\">Bilgisayar Mühendisliği</p><br></br>\r\n                    <button class=\"btn btn-primary\">Follow</button>\r\n                    <button class=\"btn btn-outline-primary\">Message</button>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card mt-3\">\r\n              <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    /*\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"150\"\r\n          height=\"160\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n          temimage={newImage}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {(!inEditMode &&\r\n          <>\r\n            <h4>\r\n              {displayName}\r\n              {username}\r\n            </h4>\r\n\r\n            {editable && <button\r\n              className=\"btn btn-success  d-inline-flex\"\r\n              onClick={() => setInEditMode(true)}>\r\n              <span className=\"material-icons\">edit</span>\r\n              {t('Edit')}</button>}\r\n          </>\r\n        )}\r\n        {(inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t('Change Display Name')}\r\n              defaultValue={displayName}\r\n              onChange={(event) => {\r\n                setUpdatedDisplayName(event.target.value)\r\n              }} />\r\n            <input type=\"file\" onChange={onChangeFile} />\r\n            <div>\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary d-inline-flex\"\r\n                onClick={onClickEdit}\r\n                disabled={pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={\r\n                  <>\r\n                    <i className=\"material-icons\">save</i>\r\n                    {t('Save')}\r\n                  </>\r\n                }\r\n              />\r\n\r\n\r\n              <button\r\n                className=\"btn btn-light d-inline-flex ml-1\"\r\n                onClick={() => setInEditMode(false)}\r\n                disabled={pendingApiCall}>\r\n                <i className=\"material-icons\">close</i>\r\n                {t('Cancel')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n\r\n      </div>\r\n\r\n    </div>*/\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n"]},"metadata":{},"sourceType":"module"}