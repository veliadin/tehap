{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adinv\\\\tehapfrontend\\\\src\\\\pages\\\\UserSignupPage.js\";\nimport React from 'react';\nimport { signup, changeLanguage } from '../api/apiCalls';\nimport Input from '../components/input';\nimport { withTranslation } from 'react-i18next';\nimport ButtonWithProgress from '../components/buttonWithProgres';\nimport { withApiProgress } from '../shared/ApiProgress';\nimport { connect } from 'react-redux';\n\nclass UserSignupPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: null,\n      displayName: null,\n      password: null,\n      passwordRepeat: null,\n      errors: {}\n    };\n\n    this.onChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      const errors = { ...this.state.errors\n      };\n      const {\n        t\n      } = this.props;\n      errors[name] = undefined;\n\n      if (name === 'password' || name === 'passwordRepeat') {\n        if (name === 'password' && value !== this.state.passwordRepeat) {\n          errors.passwordRepeat = t('Password mismatch');\n        } else if (name === 'passwordRepeat' && value !== this.state.password) {\n          errors.passwordRepeat = t('Password mismatch');\n        } else {\n          errors.passwordRepeat = undefined;\n        }\n      }\n\n      this.setState({\n        [name]: value,\n        errors\n      });\n    };\n\n    this.onClickSignup = async event => {\n      event.preventDefault();\n      const {\n        username,\n        displayName,\n        password\n      } = this.state;\n      const body = {\n        username,\n        displayName,\n        password\n      };\n\n      try {\n        const response = await signup(body); ////SİGN UP sonrası oto login olması için\n\n        const creds = {\n          username,\n          password\n        };\n        const {\n          history,\n          dispatch\n        } = this.props;\n        const {\n          push\n        } = history;\n        this.setState({\n          error: null\n        });\n\n        try {\n          await dispatch(loginHandler(creds));\n          push('/');\n        } catch (apiError) {\n          console.log(apiError);\n          this.setState({\n            error: apiError.response.data.message\n          });\n        } ///\n\n      } catch (error) {\n        if (error.response.data.validationErrors) {\n          this.setState({\n            errors: error.response.data.validationErrors\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      username,\n      displayName,\n      password,\n      passwordRepeat\n    } = errors;\n    const {\n      t,\n      pendingApiCall\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, t('Sign Up')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"username\",\n      label: t('Username'),\n      error: username,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"displayName\",\n      label: t('Display Name'),\n      error: displayName,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"password\",\n      label: t('Password'),\n      error: password,\n      onChange: this.onChange,\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"passwordRepeat\",\n      label: t('Password Repeat'),\n      error: passwordRepeat,\n      onChange: this.onChange,\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(ButtonWithProgress, {\n      onClick: this.onClickSignup,\n      disabled: pendingApiCall || passwordRepeat !== undefined,\n      pendingApiCall: pendingApiCall,\n      text: t('Sign Up'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst UserSignupPageWithApiProgress = withApiProgress(UserSignupPage, '/api/createuser');\nconst UserSignupPageWithTranslation = withTranslation()(UserSignupPageWithApiProgress);\nexport default connect()(UserSignupPageWithTranslation);","map":{"version":3,"sources":["C:/Users/adinv/tehapfrontend/src/pages/UserSignupPage.js"],"names":["React","signup","changeLanguage","Input","withTranslation","ButtonWithProgress","withApiProgress","connect","UserSignupPage","Component","state","username","displayName","password","passwordRepeat","errors","onChange","event","name","value","target","t","props","undefined","setState","onClickSignup","preventDefault","body","response","creds","history","dispatch","push","error","loginHandler","apiError","console","log","data","message","validationErrors","render","pendingApiCall","UserSignupPageWithApiProgress","UserSignupPageWithTranslation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { signup, changeLanguage } from '../api/apiCalls';\r\nimport Input from '../components/input'\r\nimport { withTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/buttonWithProgres';\r\nimport { withApiProgress } from '../shared/ApiProgress';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass UserSignupPage extends React.Component {\r\n\r\n    state = {\r\n        username: null,\r\n        displayName: null,\r\n        password: null,\r\n        passwordRepeat: null,\r\n        errors: {}\r\n    };\r\n\r\n    onChange = event => {\r\n        const { name, value } = event.target;\r\n        const errors = { ...this.state.errors }\r\n        const { t } = this.props;\r\n        errors[name] = undefined;\r\n        if (name === 'password' || name === 'passwordRepeat') {\r\n            if (name === 'password' && value !== this.state.passwordRepeat) {\r\n                errors.passwordRepeat = t('Password mismatch');\r\n            } else if (name === 'passwordRepeat' && value !== this.state.password) {\r\n                errors.passwordRepeat = t('Password mismatch');\r\n            }\r\n            else {\r\n                errors.passwordRepeat = undefined;\r\n            }\r\n        }\r\n        this.setState({\r\n            [name]: value,\r\n            errors\r\n        });\r\n    };\r\n\r\n    onClickSignup = async event => {\r\n        event.preventDefault();\r\n\r\n        const { username, displayName, password } = this.state;\r\n        const body = {\r\n            username,\r\n            displayName,\r\n            password\r\n        }\r\n\r\n        try {\r\n            const response = await signup(body);\r\n            ////SİGN UP sonrası oto login olması için\r\n            const creds = {\r\n                username,\r\n                password\r\n            };\r\n\r\n            const { history, dispatch } = this.props;\r\n            const { push } = history;\r\n\r\n            this.setState({\r\n                error: null\r\n            });\r\n\r\n            try {\r\n                await dispatch(loginHandler(creds));\r\n                push('/')\r\n            } catch (apiError) {\r\n                console.log(apiError);\r\n                this.setState({\r\n                    error: apiError.response.data.message\r\n                })\r\n            }\r\n            ///\r\n        } catch (error) {\r\n            if (error.response.data.validationErrors) {\r\n                this.setState({ errors: error.response.data.validationErrors });\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        const { username, displayName, password, passwordRepeat } = errors;\r\n        const { t, pendingApiCall } = this.props;\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <form>\r\n                    <h1 className=\"text-center\">{t('Sign Up')}</h1>\r\n                    <div className=\"form-group\">\r\n                        <Input name=\"username\" label={t('Username')} error={username} onChange={this.onChange} />\r\n                        <Input name=\"displayName\" label={t('Display Name')} error={displayName} onChange={this.onChange} />\r\n                        <Input name=\"password\" label={t('Password')} error={password} onChange={this.onChange} type=\"password\" />\r\n                        <Input name=\"passwordRepeat\" label={t('Password Repeat')} error={passwordRepeat} onChange={this.onChange} type=\"password\" />\r\n                        <ButtonWithProgress\r\n                            onClick={this.onClickSignup}\r\n                            disabled={pendingApiCall || passwordRepeat !== undefined}\r\n                            pendingApiCall={pendingApiCall}\r\n                            text={t('Sign Up')} />\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst UserSignupPageWithApiProgress = withApiProgress(UserSignupPage, '/api/createuser');\r\nconst UserSignupPageWithTranslation = withTranslation()(UserSignupPageWithApiProgress);\r\nexport default connect()(UserSignupPageWithTranslation);\r\n"]},"metadata":{},"sourceType":"module"}