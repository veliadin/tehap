{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adinv\\\\tehapfrontend\\\\src\\\\shared\\\\ApiProgress.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass ApiProgress extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pendingApiCall: false\n    };\n\n    this.updateApiCallFor = (url, inProgress) => {\n      if (url == this.props.path) {\n        this.setState({\n          pendingApiCall: inProgress\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.interceptors.request.use(request => {\n      this.updateApiCallFor(request.url, true);\n      return request;\n    });\n    axios.interceptors.response.use(response => {\n      this.updateApiCallFor(request.url, false);\n      return response;\n    }, error => {\n      this.updateApiCallFor(request.url, false);\n      throw error;\n    });\n  }\n\n  render() {\n    const {\n      pendingApiCall\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, React.cloneElement(this.props.children, {\n      pendingApiCall\n    }));\n  }\n\n}\n\nexport default ApiProgress;","map":{"version":3,"sources":["C:/Users/adinv/tehapfrontend/src/shared/ApiProgress.js"],"names":["React","Component","axios","ApiProgress","state","pendingApiCall","updateApiCallFor","url","inProgress","props","path","setState","componentDidMount","interceptors","request","use","response","error","render","cloneElement","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCG,KADgC,GACxB;AACJC,MAAAA,cAAc,EAAE;AADZ,KADwB;;AAAA,SAoBhCC,gBApBgC,GAoBb,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACpC,UAAID,GAAG,IAAI,KAAKE,KAAL,CAAWC,IAAtB,EAA4B;AACxB,aAAKC,QAAL,CAAc;AAAEN,UAAAA,cAAc,EAAEG;AAAlB,SAAd;AACH;AACJ,KAxB+B;AAAA;;AAKhCI,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,KAAK,CAACW,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCD,OAAD,IAAa;AACxC,WAAKR,gBAAL,CAAsBQ,OAAO,CAACP,GAA9B,EAAmC,IAAnC;AACA,aAAOO,OAAP;AACH,KAHD;AAIAZ,IAAAA,KAAK,CAACW,YAAN,CAAmBG,QAAnB,CAA4BD,GAA5B,CAAiCC,QAAD,IAAc;AAC1C,WAAKV,gBAAL,CAAsBQ,OAAO,CAACP,GAA9B,EAAmC,KAAnC;AACA,aAAOS,QAAP;AACH,KAHD,EAIKC,KAAD,IAAW;AACP,WAAKX,gBAAL,CAAsBQ,OAAO,CAACP,GAA9B,EAAmC,KAAnC;AACA,YAAMU,KAAN;AACH,KAPL;AAQH;;AAQDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA;AAAF,QAAqB,KAAKD,KAAhC;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,KAAK,CAACmB,YAAN,CAAmB,KAAKV,KAAL,CAAWW,QAA9B,EAAwC;AACrCf,MAAAA;AADqC,KAAxC,CADL,CADJ;AAOH;;AAnC+B;;AAsCpC,eAAeF,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass ApiProgress extends Component {\r\n    state = {\r\n        pendingApiCall: false,\r\n\r\n    };\r\n    componentDidMount() {\r\n        axios.interceptors.request.use((request) => {\r\n            this.updateApiCallFor(request.url, true);\r\n            return request;\r\n        });\r\n        axios.interceptors.response.use((response) => {\r\n            this.updateApiCallFor(request.url, false);\r\n            return response;\r\n        },\r\n            (error) => {\r\n                this.updateApiCallFor(request.url, false);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    updateApiCallFor = (url, inProgress) => {\r\n        if (url == this.props.path) {\r\n            this.setState({ pendingApiCall: inProgress });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { pendingApiCall } = this.state;\r\n        return (\r\n            <div>\r\n                {React.cloneElement(this.props.children, {\r\n                    pendingApiCall\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ApiProgress;"]},"metadata":{},"sourceType":"module"}