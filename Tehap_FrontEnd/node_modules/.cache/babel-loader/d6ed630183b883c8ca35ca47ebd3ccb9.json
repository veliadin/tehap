{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport authReducer from './authReducer';\nimport SecureLS from 'secure-ls';\nimport thunk from 'redux-thunk';\nimport { setAuthorizationHeader } from '../api/apiCalls';\nconst secureLs = new SecureLS();\n\nconst getStateFromStorage = () => {\n  const appAuth = secureLs.get('app-auth');\n  let stateInLocalStorage = {\n    isLoggedIn: false,\n    username: undefined,\n    displayName: undefined,\n    image: undefined,\n    password: undefined,\n    email: undefined,\n    picture: undefined\n  };\n\n  if (appAuth) {\n    return stateInLocalStorage = appAuth;\n  }\n\n  return stateInLocalStorage;\n};\n\nconst updateStateInStorage = newState => {\n  secureLs.set('app-auth', newState);\n};\n\nconst configureStore = () => {\n  const initialState = getStateFromStorage();\n  setAuthorizationHeader(initialState);\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\n  const store = createStore(authReducer, initialState, getStateFromStorage(), composeEnhancers(applyMiddleware(thunk)));\n  store.subscribe(() => {\n    //store'da her hangi bir değişimde arkadak çalışacak\n    updateStateInStorage(store.getState());\n  });\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["D:/JsProjects/Tehap_FrontEnd/Tehap_FrontEnd/src/redux/configureStore.js"],"names":["createStore","applyMiddleware","compose","authReducer","SecureLS","thunk","setAuthorizationHeader","secureLs","getStateFromStorage","appAuth","get","stateInLocalStorage","isLoggedIn","username","undefined","displayName","image","password","email","picture","updateStateInStorage","newState","set","configureStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AAGA,MAAMC,QAAQ,GAAG,IAAIH,QAAJ,EAAjB;;AAEA,MAAMI,mBAAmB,GAAG,MAAM;AAC9B,QAAMC,OAAO,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAAb,CAAhB;AAEA,MAAIC,mBAAmB,GAAG;AACtBC,IAAAA,UAAU,EAAE,KADU;AAEtBC,IAAAA,QAAQ,EAAEC,SAFY;AAGtBC,IAAAA,WAAW,EAAED,SAHS;AAItBE,IAAAA,KAAK,EAAEF,SAJe;AAKtBG,IAAAA,QAAQ,EAAEH,SALY;AAMtBI,IAAAA,KAAK,EAAEJ,SANe;AAOtBK,IAAAA,OAAO,EAAEL;AAPa,GAA1B;;AAUA,MAAIL,OAAJ,EAAa;AACT,WAAOE,mBAAmB,GAAGF,OAA7B;AACH;;AACD,SAAOE,mBAAP;AACH,CAjBD;;AAmBA,MAAMS,oBAAoB,GAAGC,QAAQ,IAAI;AACrCd,EAAAA,QAAQ,CAACe,GAAT,CAAa,UAAb,EAAyBD,QAAzB;AAEH,CAHD;;AAKA,MAAME,cAAc,GAAG,MAAM;AACzB,QAAMC,YAAY,GAAGhB,mBAAmB,EAAxC;AACAF,EAAAA,sBAAsB,CAACkB,YAAD,CAAtB;AACA,QAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CzB,OAAxE,CAHyB,CAIzB;;AACA,QAAM0B,KAAK,GAAG5B,WAAW,CAACG,WAAD,EAAcqB,YAAd,EAA4BhB,mBAAmB,EAA/C,EAAmDiB,gBAAgB,CAACxB,eAAe,CAACI,KAAD,CAAhB,CAAnE,CAAzB;AAEAuB,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AAAC;AACnBT,IAAAA,oBAAoB,CAACQ,KAAK,CAACE,QAAN,EAAD,CAApB;AACH,GAFD;AAIA,SAAOF,KAAP;AACH,CAZD;;AAcA,eAAeL,cAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\nimport thunk from 'redux-thunk';\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n    const appAuth = secureLs.get('app-auth');\r\n\r\n    let stateInLocalStorage = {\r\n        isLoggedIn: false,\r\n        username: undefined,\r\n        displayName: undefined,\r\n        image: undefined,\r\n        password: undefined,\r\n        email: undefined,\r\n        picture: undefined,\r\n    }\r\n\r\n    if (appAuth) {\r\n        return stateInLocalStorage = appAuth;\r\n    }\r\n    return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = newState => {\r\n    secureLs.set('app-auth', newState);\r\n\r\n};\r\n\r\nconst configureStore = () => {\r\n    const initialState = getStateFromStorage();\r\n    setAuthorizationHeader(initialState);\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    const store = createStore(authReducer, initialState, getStateFromStorage(), composeEnhancers(applyMiddleware(thunk)));\r\n\r\n    store.subscribe(() => {//store'da her hangi bir değişimde arkadak çalışacak\r\n        updateStateInStorage(store.getState());\r\n    });\r\n\r\n    return store;\r\n}\r\n\r\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}