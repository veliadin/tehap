{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adinv\\\\tehapfrontend\\\\src\\\\pages\\\\UserLoginPage.js\";\nimport React from 'react';\nimport Input from '../components/input';\nimport { withTranslation } from 'react-i18next';\nimport { login } from '../api/apiCalls';\nimport ButtonWithProgress from '../components/buttonWithProgres';\nimport { withApiProgress } from '../shared/ApiProgress';\nimport { connect } from 'react-redux';\nimport { loginSuccess } from '../redux/authActions'; //import { Authentication } from '../shared/AuthenticationContext'\n\nclass UserLoginPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: null,\n      password: null,\n      error: null\n    };\n\n    this.onChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value,\n        error: null\n      });\n    };\n\n    this.onClickLogin = async event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      const creds = {\n        username,\n        password\n      };\n      const {\n        push\n      } = this.props.history;\n      this.setState({\n        error: null\n      });\n\n      try {\n        const response = await login(creds);\n        push('/');\n        const authState = { ...response.data,\n          password: password\n        };\n        this.props.onLoginSuccess(authState);\n      } catch (apiError) {\n        this.setState({\n          error: apiError.response.data.message\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      t,\n      pendingApiCall\n    } = this.props;\n    const {\n      username,\n      password,\n      error\n    } = this.state;\n    const buttonEnabled = username && password;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, t('Login')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"username\",\n      label: t('Username'),\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"password\",\n      label: t('Password'),\n      type: \"password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }), error && /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 35\n      }\n    }, error), /*#__PURE__*/React.createElement(ButtonWithProgress, {\n      onClick: this.onClickLogin,\n      disabled: !buttonEnabled || pendingApiCall,\n      pendingApiCall: pendingApiCall,\n      text: t('Login'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst LoginPageWithTransation = withTranslation()(UserLoginPage);\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoginSuccess: authState => {\n      return dispatch(loginSuccess(authState));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(withApiProgress(LoginPageWithTransation, '/api/auth'));","map":{"version":3,"sources":["C:/Users/adinv/tehapfrontend/src/pages/UserLoginPage.js"],"names":["React","Input","withTranslation","login","ButtonWithProgress","withApiProgress","connect","loginSuccess","UserLoginPage","Component","state","username","password","error","onChange","event","name","value","target","setState","onClickLogin","preventDefault","creds","push","props","history","response","authState","data","onLoginSuccess","apiError","message","render","t","pendingApiCall","buttonEnabled","LoginPageWithTransation","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,sBAA7B,C,CACA;;AAEA,MAAMC,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAGxCC,KAHwC,GAGhC;AACJC,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,QAAQ,EAAE,IAFN;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAHgC;;AAAA,SASxCC,QATwC,GAS7BC,KAAK,IAAI;AAChB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,KAAK,CAACG,MAA9B;AACA,WAAKC,QAAL,CAAc;AACV,SAACH,IAAD,GAAQC,KADE;AAEVJ,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIH,KAfuC;;AAAA,SAgBxCO,YAhBwC,GAgBzB,MAAML,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACM,cAAN;AACA,YAAM;AAAEV,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAyB,KAAKF,KAApC;AACA,YAAMY,KAAK,GAAG;AACVX,QAAAA,QADU;AAEVC,QAAAA;AAFU,OAAd;AAIA,YAAM;AAAEW,QAAAA;AAAF,UAAW,KAAKC,KAAL,CAAWC,OAA5B;AAEA,WAAKN,QAAL,CAAc;AACVN,QAAAA,KAAK,EAAE;AADG,OAAd;;AAIA,UAAI;AACA,cAAMa,QAAQ,GAAG,MAAMvB,KAAK,CAACmB,KAAD,CAA5B;AACAC,QAAAA,IAAI,CAAC,GAAD,CAAJ;AACA,cAAMI,SAAS,GAAG,EACd,GAAGD,QAAQ,CAACE,IADE;AAEdhB,UAAAA,QAAQ,EAAEA;AAFI,SAAlB;AAIA,aAAKY,KAAL,CAAWK,cAAX,CAA0BF,SAA1B;AACH,OARD,CAQE,OAAOG,QAAP,EAAiB;AACf,aAAKX,QAAL,CAAc;AACVN,UAAAA,KAAK,EAAEiB,QAAQ,CAACJ,QAAT,CAAkBE,IAAlB,CAAuBG;AADpB,SAAd;AAGH;AACJ,KA1CuC;AAAA;;AA4CxCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAwB,KAAKV,KAAnC;AACA,UAAM;AAAEb,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,QAAgC,KAAKH,KAA3C;AACA,UAAMyB,aAAa,GAAGxB,QAAQ,IAAIC,QAAlC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BqB,CAAC,CAAC,OAAD,CAA9B,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,KAAK,EAAEA,CAAC,CAAC,UAAD,CAA/B;AAA6C,MAAA,QAAQ,EAAE,KAAKnB,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,KAAK,EAAEmB,CAAC,CAAC,UAAD,CAA/B;AAA6C,MAAA,IAAI,EAAC,UAAlD;AAA6D,MAAA,QAAQ,EAAE,KAAKnB,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKD,KAAK,iBAAI;AAAK,MAAA,KAAK,EAAC,oBAAX;AAAgC,MAAA,IAAI,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CA,KAA9C,CAHd,eAII,oBAAC,kBAAD;AACI,MAAA,OAAO,EAAE,KAAKO,YADlB;AAEI,MAAA,QAAQ,EAAE,CAACe,aAAD,IAAkBD,cAFhC;AAGI,MAAA,cAAc,EAAEA,cAHpB;AAII,MAAA,IAAI,EAAED,CAAC,CAAC,OAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,CADJ,CADJ;AAkBH;;AAlEuC;;AAqE5C,MAAMG,uBAAuB,GAAGlC,eAAe,GAAGM,aAAH,CAA/C;;AAEA,MAAM6B,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHT,IAAAA,cAAc,EAAEF,SAAS,IAAI;AACzB,aAAOW,QAAQ,CAAC/B,YAAY,CAACoB,SAAD,CAAb,CAAf;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAerB,OAAO,CAAC,IAAD,EAAO+B,kBAAP,CAAP,CAAkChC,eAAe,CAAC+B,uBAAD,EAA0B,WAA1B,CAAjD,CAAf","sourcesContent":["import React from 'react';\r\nimport Input from '../components/input'\r\nimport { withTranslation } from 'react-i18next'\r\nimport { login } from '../api/apiCalls'\r\nimport ButtonWithProgress from '../components/buttonWithProgres';\r\nimport { withApiProgress } from '../shared/ApiProgress'\r\nimport { connect } from 'react-redux';\r\nimport { loginSuccess } from '../redux/authActions';\r\n//import { Authentication } from '../shared/AuthenticationContext'\r\n\r\nclass UserLoginPage extends React.Component {\r\n\r\n    //static contextType = Authentication;\r\n    state = {\r\n        username: null,\r\n        password: null,\r\n        error: null\r\n    };\r\n\r\n    onChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value,\r\n            error: null\r\n        })\r\n    }\r\n    onClickLogin = async event => {\r\n        event.preventDefault();\r\n        const { username, password } = this.state;\r\n        const creds = {\r\n            username,\r\n            password\r\n        };\r\n        const { push } = this.props.history;\r\n\r\n        this.setState({\r\n            error: null\r\n        });\r\n\r\n        try {\r\n            const response = await login(creds);\r\n            push('/')\r\n            const authState = {\r\n                ...response.data,\r\n                password: password\r\n            };\r\n            this.props.onLoginSuccess(authState);\r\n        } catch (apiError) {\r\n            this.setState({\r\n                error: apiError.response.data.message\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, pendingApiCall } = this.props;\r\n        const { username, password, error } = this.state;\r\n        const buttonEnabled = username && password;\r\n        return (\r\n            <div className=\"container\">\r\n                <form>\r\n                    <h1 className=\"text-center\">{t('Login')}</h1>\r\n                    <div className=\"form-group\">\r\n                        <Input name=\"username\" label={t('Username')} onChange={this.onChange} />\r\n                        <Input name=\"password\" label={t('Password')} type=\"password\" onChange={this.onChange} />\r\n                        {error && <div class=\"alert alert-danger\" role=\"alert\">{error}</div>}\r\n                        <ButtonWithProgress\r\n                            onClick={this.onClickLogin}\r\n                            disabled={!buttonEnabled || pendingApiCall}\r\n                            pendingApiCall={pendingApiCall}\r\n                            text={t('Login')} />\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst LoginPageWithTransation = withTranslation()(UserLoginPage);\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLoginSuccess: authState => {\r\n            return dispatch(loginSuccess(authState));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withApiProgress(LoginPageWithTransation, '/api/auth'));"]},"metadata":{},"sourceType":"module"}