{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adinv\\\\FrontEnd Projects\\\\AppStater_v01\\\\src\\\\pages\\\\UserLoginPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from '../components/input';\nimport { useTranslation } from 'react-i18next';\nimport ButtonWithProgress from '../components/buttonWithProgres';\nimport { useApiProgress } from '../shared/ApiProgress';\nimport { useDispatch } from 'react-redux';\nimport { loginHandler } from '../redux/authActions';\n\nconst UserLoginPage = props => {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // username veya password'da bir değişim olduğunda, errorlar undefined oluyor.\n    setError(undefined);\n  }, [username, password]);\n\n  const onClickLogin = async event => {\n    event.preventDefault();\n    const creds = {\n      username,\n      password\n    };\n    const {\n      history\n    } = props;\n    const {\n      push\n    } = history;\n    setError(undefined);\n\n    try {\n      await dispatch(loginHandler(creds));\n      push('/');\n    } catch (apiError) {\n      setError(apiError.response.data.message);\n    }\n  };\n\n  const {\n    t\n  } = useTranslation();\n  const pendingApiCall = useApiProgress('/api/auth');\n  const buttonEnabled = username && password;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, t('Login')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-label-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: t('Username'),\n    onChange: event => setUsername(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: t('Password'),\n    type: \"password\",\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }\n  }, error), /*#__PURE__*/React.createElement(ButtonWithProgress, {\n    onClick: onClickLogin,\n    disabled: !buttonEnabled || pendingApiCall,\n    pendingApiCall: pendingApiCall,\n    text: t('Login'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default UserLoginPage;","map":{"version":3,"sources":["C:/Users/adinv/FrontEnd Projects/AppStater_v01/src/pages/UserLoginPage.js"],"names":["React","useState","useEffect","Input","useTranslation","ButtonWithProgress","useApiProgress","useDispatch","loginHandler","UserLoginPage","props","username","setUsername","password","setPassword","error","setError","dispatch","undefined","onClickLogin","event","preventDefault","creds","history","push","apiError","response","data","message","t","pendingApiCall","buttonEnabled","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,EAAxC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,EAAlC;AACA,QAAMgB,QAAQ,GAAGV,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AAAE;AACdc,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACH,GAFQ,EAEN,CAACP,QAAD,EAAWE,QAAX,CAFM,CAAT;;AAIA,QAAMM,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,KAAK,GAAG;AACVX,MAAAA,QADU;AAEVE,MAAAA;AAFU,KAAd;AAMA,UAAM;AAAEU,MAAAA;AAAF,QAAcb,KAApB;AACA,UAAM;AAAEc,MAAAA;AAAF,QAAWD,OAAjB;AAEAP,IAAAA,QAAQ,CAACE,SAAD,CAAR;;AACA,QAAI;AACA,YAAMD,QAAQ,CAACT,YAAY,CAACc,KAAD,CAAb,CAAd;AACAE,MAAAA,IAAI,CAAC,GAAD,CAAJ;AACH,KAHD,CAGE,OAAOC,QAAP,EAAiB;AACfT,MAAAA,QAAQ,CAACS,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBC,OAAxB,CAAR;AACH;AACJ,GAlBD;;AAoBA,QAAM;AAAEC,IAAAA;AAAF,MAAQzB,cAAc,EAA5B;AACA,QAAM0B,cAAc,GAAGxB,cAAc,CAAC,WAAD,CAArC;AACA,QAAMyB,aAAa,GAAGpB,QAAQ,IAAIE,QAAlC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BgB,CAAC,CAAC,OAAD,CAA9B,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,CAAC,CAAC,UAAD,CAAf;AAA6B,IAAA,QAAQ,EAAET,KAAK,IAAIR,WAAW,CAACQ,KAAK,CAACY,MAAN,CAAaC,KAAd,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,CAAC,CAAC,UAAD,CAAf;AAA6B,IAAA,IAAI,EAAC,UAAlC;AAA6C,IAAA,QAAQ,EAAET,KAAK,IAAIN,WAAW,CAACM,KAAK,CAACY,MAAN,CAAaC,KAAd,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKlB,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDA,KAAlD,CAHd,eAII,oBAAC,kBAAD;AACI,IAAA,OAAO,EAAEI,YADb;AAEI,IAAA,QAAQ,EAAE,CAACY,aAAD,IAAkBD,cAFhC;AAGI,IAAA,cAAc,EAAEA,cAHpB;AAII,IAAA,IAAI,EAAED,CAAC,CAAC,OAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFJ,CADJ,CADJ;AAiBH,CAlDD;;AAqDA,eAAepB,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Input from '../components/input'\r\nimport { useTranslation } from 'react-i18next'\r\nimport ButtonWithProgress from '../components/buttonWithProgres';\r\nimport { useApiProgress } from '../shared/ApiProgress'\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginHandler } from '../redux/authActions';\r\n\r\nconst UserLoginPage = (props) => {\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => { // username veya password'da bir değişim olduğunda, errorlar undefined oluyor.\r\n        setError(undefined);\r\n    }, [username, password])\r\n\r\n    const onClickLogin = async event => {\r\n        event.preventDefault();\r\n        const creds = {\r\n            username,\r\n            password\r\n        };\r\n\r\n\r\n        const { history } = props;\r\n        const { push } = history;\r\n\r\n        setError(undefined);\r\n        try {\r\n            await dispatch(loginHandler(creds));\r\n            push('/')\r\n        } catch (apiError) {\r\n            setError(apiError.response.data.message);\r\n        }\r\n    };\r\n\r\n    const { t } = useTranslation();\r\n    const pendingApiCall = useApiProgress('/api/auth');\r\n    const buttonEnabled = username && password;\r\n    return (\r\n        <div className=\"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t('Login')}</h1>\r\n                <div className=\"form-label-group\">\r\n                    <Input label={t('Username')} onChange={event => setUsername(event.target.value)} />\r\n                    <Input label={t('Password')} type=\"password\" onChange={event => setPassword(event.target.value)} />\r\n                    {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\r\n                    <ButtonWithProgress\r\n                        onClick={onClickLogin}\r\n                        disabled={!buttonEnabled || pendingApiCall}\r\n                        pendingApiCall={pendingApiCall}\r\n                        text={t('Login')} />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default UserLoginPage;"]},"metadata":{},"sourceType":"module"}